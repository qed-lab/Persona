(define
	(domain grounded-ARTHUR_HYRULE)
	(:requirements :strips :action-costs)
	(:predicates
		(NOT-AT_KNIGHTSHIELD_SHOP)
		(HAS_ARTHUR_KNIGHTSHIELD)
		(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
		(NOT-AT_RUBYRING_SHOP)
		(HAS_ARTHUR_RUBYRING)
		(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
		(NOT-HAS_ARTHUR_SHINYKEY)
		(AT_SHINYKEY_SHOP)
		(NOT-HAS_ARTHUR_ASH)
		(AT_ASH_SHOP)
		(NOT-HAS_ARTHUR_LOVELETTER)
		(AT_LOVELETTER_SHOP)
		(NOT-HAS_ARTHUR_HAIRTONIC)
		(AT_HAIRTONIC_SHOP)
		(NOT-HAS_ARTHUR_KNIGHTSWORD)
		(AT_KNIGHTSWORD_SHOP)
		(HAS_GIOVANNA_HAIRTONIC)
		(NOT-AT_ARTHUR_SHOP)
		(AT_ARTHUR_TOWNSQUARE)
		(AT_ARTHUR_TOWNARCH)
		(NOT-AT_MUSHROOM_TOWNARCH)
		(HAS_ARTHUR_MUSHROOM)
		(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
		(NOT-AT_MIRROR_TOWNARCH)
		(HAS_ARTHUR_MIRROR)
		(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
		(AT_SHINYKEY_TOWNARCH)
		(AT_SHINYKEY_TOWNSQUARE)
		(AT_MUSHROOM_TOWNSQUARE)
		(AT_MUSHROOM_SHOP)
		(AT_MIRROR_TOWNSQUARE)
		(AT_MIRROR_SHOP)
		(AT_ASH_TOWNARCH)
		(AT_ASH_TOWNSQUARE)
		(AT_LOVELETTER_TOWNARCH)
		(AT_LOVELETTER_TOWNSQUARE)
		(AT_HAIRTONIC_TOWNARCH)
		(AT_HAIRTONIC_TOWNSQUARE)
		(AT_KNIGHTSWORD_TOWNARCH)
		(AT_KNIGHTSWORD_TOWNSQUARE)
		(AT_KNIGHTSHIELD_TOWNARCH)
		(AT_KNIGHTSHIELD_TOWNSQUARE)
		(AT_RUBYRING_TOWNARCH)
		(AT_RUBYRING_TOWNSQUARE)
		(AT_ARTHUR_DOCKS)
		(AT_ARTHUR_CLIFF)
		(AT_ARTHUR_VALLEY)
		(NOT-LOCKED_BANKENTRANCE)
		(NOT-CLOSED_BANKENTRANCE)
		(AT_ARTHUR_BANK)
		(AT_ARTHUR_HUT)
		(AT_ARTHUR_BAR)
		(AT_ARTHUR_MANSION)
		(AT_ARTHUR_FORGE)
		(AT_ARTHUR_BASEMENT)
		(NOT-AT_BOOK_HUT)
		(HAS_ARTHUR_BOOK)
		(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
		(NOT-AT_ROPE_FORGE)
		(HAS_ARTHUR_ROPE)
		(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
		(AT_SHINYKEY_BASEMENT)
		(AT_SHINYKEY_BAR)
		(AT_SHINYKEY_DOCKS)
		(AT_SHINYKEY_HUT)
		(AT_SHINYKEY_FORGE)
		(AT_SHINYKEY_CLIFF)
		(AT_SHINYKEY_MANSION)
		(AT_SHINYKEY_VALLEY)
		(AT_SHINYKEY_BANK)
		(AT_MUSHROOM_BASEMENT)
		(AT_MUSHROOM_BAR)
		(AT_MUSHROOM_DOCKS)
		(AT_MUSHROOM_HUT)
		(AT_MUSHROOM_FORGE)
		(AT_MUSHROOM_CLIFF)
		(AT_MUSHROOM_MANSION)
		(AT_MUSHROOM_VALLEY)
		(AT_MUSHROOM_BANK)
		(AT_MIRROR_BASEMENT)
		(AT_MIRROR_BAR)
		(AT_MIRROR_DOCKS)
		(AT_MIRROR_HUT)
		(AT_MIRROR_FORGE)
		(AT_MIRROR_CLIFF)
		(AT_MIRROR_MANSION)
		(AT_MIRROR_VALLEY)
		(AT_MIRROR_BANK)
		(AT_ASH_BASEMENT)
		(AT_ASH_BAR)
		(AT_ASH_DOCKS)
		(AT_ASH_HUT)
		(AT_ASH_FORGE)
		(AT_ASH_CLIFF)
		(AT_ASH_MANSION)
		(AT_ASH_VALLEY)
		(AT_ASH_BANK)
		(AT_LOVELETTER_BASEMENT)
		(AT_LOVELETTER_BAR)
		(AT_LOVELETTER_DOCKS)
		(AT_LOVELETTER_HUT)
		(AT_LOVELETTER_FORGE)
		(AT_LOVELETTER_CLIFF)
		(AT_LOVELETTER_MANSION)
		(AT_LOVELETTER_VALLEY)
		(AT_LOVELETTER_BANK)
		(AT_HAIRTONIC_BASEMENT)
		(AT_HAIRTONIC_BAR)
		(AT_HAIRTONIC_DOCKS)
		(AT_HAIRTONIC_HUT)
		(AT_HAIRTONIC_FORGE)
		(AT_HAIRTONIC_CLIFF)
		(AT_HAIRTONIC_MANSION)
		(AT_HAIRTONIC_VALLEY)
		(AT_HAIRTONIC_BANK)
		(AT_BOOK_BASEMENT)
		(AT_BOOK_BAR)
		(AT_BOOK_DOCKS)
		(AT_BOOK_TOWNARCH)
		(AT_BOOK_FORGE)
		(AT_BOOK_TOWNSQUARE)
		(AT_BOOK_SHOP)
		(AT_BOOK_CLIFF)
		(AT_BOOK_MANSION)
		(AT_BOOK_VALLEY)
		(AT_BOOK_BANK)
		(AT_KNIGHTSWORD_BASEMENT)
		(AT_KNIGHTSWORD_BAR)
		(AT_KNIGHTSWORD_DOCKS)
		(AT_KNIGHTSWORD_HUT)
		(AT_KNIGHTSWORD_FORGE)
		(AT_KNIGHTSWORD_CLIFF)
		(AT_KNIGHTSWORD_MANSION)
		(AT_KNIGHTSWORD_VALLEY)
		(AT_KNIGHTSWORD_BANK)
		(AT_ROPE_BASEMENT)
		(AT_ROPE_BAR)
		(AT_ROPE_DOCKS)
		(AT_ROPE_TOWNARCH)
		(AT_ROPE_HUT)
		(AT_ROPE_TOWNSQUARE)
		(AT_ROPE_SHOP)
		(AT_ROPE_CLIFF)
		(AT_ROPE_MANSION)
		(AT_ROPE_VALLEY)
		(AT_ROPE_BANK)
		(AT_KNIGHTSHIELD_BASEMENT)
		(AT_KNIGHTSHIELD_BAR)
		(AT_KNIGHTSHIELD_DOCKS)
		(AT_KNIGHTSHIELD_HUT)
		(AT_KNIGHTSHIELD_FORGE)
		(AT_KNIGHTSHIELD_CLIFF)
		(AT_KNIGHTSHIELD_MANSION)
		(AT_KNIGHTSHIELD_VALLEY)
		(AT_KNIGHTSHIELD_BANK)
		(AT_RUBYRING_BASEMENT)
		(AT_RUBYRING_BAR)
		(AT_RUBYRING_DOCKS)
		(AT_RUBYRING_HUT)
		(AT_RUBYRING_FORGE)
		(AT_RUBYRING_CLIFF)
		(AT_RUBYRING_MANSION)
		(AT_RUBYRING_VALLEY)
		(AT_RUBYRING_BANK)
		(HAS_JORDAN_LOVELETTER)
		(AT_ARTHUR_STORAGE)
		(AT_ARTHUR_JUNKYARD)
		(AT_SHINYKEY_STORAGE)
		(AT_SHINYKEY_JUNKYARD)
		(AT_MUSHROOM_STORAGE)
		(AT_MUSHROOM_JUNKYARD)
		(AT_MIRROR_STORAGE)
		(AT_MIRROR_JUNKYARD)
		(AT_ASH_STORAGE)
		(AT_ASH_JUNKYARD)
		(AT_LOVELETTER_STORAGE)
		(AT_LOVELETTER_JUNKYARD)
		(AT_HAIRTONIC_STORAGE)
		(AT_HAIRTONIC_JUNKYARD)
		(AT_BOOK_STORAGE)
		(AT_BOOK_JUNKYARD)
		(AT_KNIGHTSWORD_STORAGE)
		(AT_KNIGHTSWORD_JUNKYARD)
		(AT_ROPE_STORAGE)
		(AT_ROPE_JUNKYARD)
		(AT_KNIGHTSHIELD_STORAGE)
		(AT_KNIGHTSHIELD_JUNKYARD)
		(AT_RUBYRING_STORAGE)
		(AT_RUBYRING_JUNKYARD)
		(NOT-HAS_ARTHUR_RUBYRING)
		(NOT-HAS_ARTHUR_KNIGHTSHIELD)
		(NOT-HAS_ARTHUR_ROPE)
		(NOT-HAS_ARTHUR_BOOK)
		(NOT-HAS_ARTHUR_MIRROR)
		(NOT-HAS_ARTHUR_MUSHROOM)
		(NOT-AT_ARTHUR_BASEMENT)
		(HAS_ARTHUR_SHINYKEY)
		(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
		(WANTS-ITEM_ARTHUR_SHINYKEY)
		(NOT-AT_RUBYRING_JUNKYARD)
		(NOT-AT_RUBYRING_STORAGE)
		(NOT-AT_KNIGHTSHIELD_JUNKYARD)
		(NOT-AT_KNIGHTSHIELD_STORAGE)
		(NOT-AT_ROPE_JUNKYARD)
		(NOT-AT_ROPE_STORAGE)
		(HAS_ARTHUR_KNIGHTSWORD)
		(NOT-AT_KNIGHTSWORD_JUNKYARD)
		(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
		(NOT-AT_KNIGHTSWORD_STORAGE)
		(NOT-AT_BOOK_JUNKYARD)
		(NOT-AT_BOOK_STORAGE)
		(HAS_ARTHUR_HAIRTONIC)
		(NOT-AT_HAIRTONIC_JUNKYARD)
		(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
		(NOT-AT_HAIRTONIC_STORAGE)
		(HAS_ARTHUR_LOVELETTER)
		(NOT-AT_LOVELETTER_JUNKYARD)
		(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
		(NOT-AT_LOVELETTER_STORAGE)
		(HAS_ARTHUR_ASH)
		(NOT-AT_ASH_JUNKYARD)
		(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
		(NOT-AT_ASH_STORAGE)
		(NOT-AT_MIRROR_JUNKYARD)
		(NOT-AT_MIRROR_STORAGE)
		(NOT-AT_MUSHROOM_JUNKYARD)
		(NOT-AT_MUSHROOM_STORAGE)
		(NOT-AT_SHINYKEY_JUNKYARD)
		(NOT-AT_SHINYKEY_STORAGE)
		(NOT-AT_ARTHUR_JUNKYARD)
		(NOT-AT_ARTHUR_STORAGE)
		(NOT-AT_ARTHUR_TOWNARCH)
		(NOT-AT_ARTHUR_BAR)
		(NOT-AT_ARTHUR_DOCKS)
		(WANTS-ITEM_JORDAN_LOVELETTER)
		(NOT-HAS_JORDAN_LOVELETTER)
		(NOT-AT_RUBYRING_BANK)
		(NOT-AT_RUBYRING_VALLEY)
		(NOT-AT_RUBYRING_MANSION)
		(NOT-AT_RUBYRING_CLIFF)
		(NOT-AT_RUBYRING_FORGE)
		(NOT-AT_RUBYRING_HUT)
		(NOT-AT_RUBYRING_DOCKS)
		(NOT-AT_RUBYRING_BAR)
		(NOT-AT_RUBYRING_BASEMENT)
		(NOT-AT_KNIGHTSHIELD_BANK)
		(NOT-AT_KNIGHTSHIELD_VALLEY)
		(NOT-AT_KNIGHTSHIELD_MANSION)
		(NOT-AT_KNIGHTSHIELD_CLIFF)
		(NOT-AT_KNIGHTSHIELD_FORGE)
		(NOT-AT_KNIGHTSHIELD_HUT)
		(NOT-AT_KNIGHTSHIELD_DOCKS)
		(NOT-AT_KNIGHTSHIELD_BAR)
		(NOT-AT_KNIGHTSHIELD_BASEMENT)
		(NOT-AT_ROPE_BANK)
		(NOT-AT_ROPE_VALLEY)
		(NOT-AT_ROPE_MANSION)
		(NOT-AT_ROPE_CLIFF)
		(NOT-AT_ROPE_SHOP)
		(NOT-AT_ROPE_TOWNSQUARE)
		(NOT-AT_ROPE_HUT)
		(NOT-AT_ROPE_TOWNARCH)
		(NOT-AT_ROPE_DOCKS)
		(NOT-AT_ROPE_BAR)
		(NOT-AT_ROPE_BASEMENT)
		(NOT-AT_KNIGHTSWORD_BANK)
		(NOT-AT_KNIGHTSWORD_VALLEY)
		(NOT-AT_KNIGHTSWORD_MANSION)
		(NOT-AT_KNIGHTSWORD_CLIFF)
		(NOT-AT_KNIGHTSWORD_FORGE)
		(NOT-AT_KNIGHTSWORD_HUT)
		(NOT-AT_KNIGHTSWORD_DOCKS)
		(NOT-AT_KNIGHTSWORD_BAR)
		(NOT-AT_KNIGHTSWORD_BASEMENT)
		(NOT-AT_BOOK_BANK)
		(NOT-AT_BOOK_VALLEY)
		(NOT-AT_BOOK_MANSION)
		(NOT-AT_BOOK_CLIFF)
		(NOT-AT_BOOK_SHOP)
		(NOT-AT_BOOK_TOWNSQUARE)
		(NOT-AT_BOOK_FORGE)
		(NOT-AT_BOOK_TOWNARCH)
		(NOT-AT_BOOK_DOCKS)
		(NOT-AT_BOOK_BAR)
		(NOT-AT_BOOK_BASEMENT)
		(NOT-AT_HAIRTONIC_BANK)
		(NOT-AT_HAIRTONIC_VALLEY)
		(NOT-AT_HAIRTONIC_MANSION)
		(NOT-AT_HAIRTONIC_CLIFF)
		(NOT-AT_HAIRTONIC_FORGE)
		(NOT-AT_HAIRTONIC_HUT)
		(NOT-AT_HAIRTONIC_DOCKS)
		(NOT-AT_HAIRTONIC_BAR)
		(NOT-AT_HAIRTONIC_BASEMENT)
		(NOT-AT_LOVELETTER_BANK)
		(NOT-AT_LOVELETTER_VALLEY)
		(NOT-AT_LOVELETTER_MANSION)
		(NOT-AT_LOVELETTER_CLIFF)
		(NOT-AT_LOVELETTER_FORGE)
		(NOT-AT_LOVELETTER_HUT)
		(NOT-AT_LOVELETTER_DOCKS)
		(NOT-AT_LOVELETTER_BAR)
		(NOT-AT_LOVELETTER_BASEMENT)
		(NOT-AT_ASH_BANK)
		(NOT-AT_ASH_VALLEY)
		(NOT-AT_ASH_MANSION)
		(NOT-AT_ASH_CLIFF)
		(NOT-AT_ASH_FORGE)
		(NOT-AT_ASH_HUT)
		(NOT-AT_ASH_DOCKS)
		(NOT-AT_ASH_BAR)
		(NOT-AT_ASH_BASEMENT)
		(NOT-AT_MIRROR_BANK)
		(NOT-AT_MIRROR_VALLEY)
		(NOT-AT_MIRROR_MANSION)
		(NOT-AT_MIRROR_CLIFF)
		(NOT-AT_MIRROR_FORGE)
		(NOT-AT_MIRROR_HUT)
		(NOT-AT_MIRROR_DOCKS)
		(NOT-AT_MIRROR_BAR)
		(NOT-AT_MIRROR_BASEMENT)
		(NOT-AT_MUSHROOM_BANK)
		(NOT-AT_MUSHROOM_VALLEY)
		(NOT-AT_MUSHROOM_MANSION)
		(NOT-AT_MUSHROOM_CLIFF)
		(NOT-AT_MUSHROOM_FORGE)
		(NOT-AT_MUSHROOM_HUT)
		(NOT-AT_MUSHROOM_DOCKS)
		(NOT-AT_MUSHROOM_BAR)
		(NOT-AT_MUSHROOM_BASEMENT)
		(NOT-AT_SHINYKEY_BANK)
		(NOT-AT_SHINYKEY_VALLEY)
		(NOT-AT_SHINYKEY_MANSION)
		(NOT-AT_SHINYKEY_CLIFF)
		(NOT-AT_SHINYKEY_FORGE)
		(NOT-AT_SHINYKEY_HUT)
		(NOT-AT_SHINYKEY_DOCKS)
		(NOT-AT_SHINYKEY_BAR)
		(NOT-AT_SHINYKEY_BASEMENT)
		(AT_ROPE_FORGE)
		(AT_BOOK_HUT)
		(NOT-AT_ARTHUR_MANSION)
		(NOT-AT_ARTHUR_FORGE)
		(NOT-AT_ARTHUR_HUT)
		(NOT-AT_ARTHUR_BANK)
		(NOT-AT_ARTHUR_VALLEY)
		(NOT-AT_ARTHUR_CLIFF)
		(CLOSED_BANKENTRANCE)
		(LOCKED_BANKENTRANCE)
		(NOT-AT_ARTHUR_TOWNSQUARE)
		(NOT-AT_RUBYRING_TOWNSQUARE)
		(NOT-AT_RUBYRING_TOWNARCH)
		(NOT-AT_KNIGHTSHIELD_TOWNSQUARE)
		(NOT-AT_KNIGHTSHIELD_TOWNARCH)
		(NOT-AT_KNIGHTSWORD_TOWNSQUARE)
		(NOT-AT_KNIGHTSWORD_TOWNARCH)
		(NOT-AT_HAIRTONIC_TOWNSQUARE)
		(NOT-AT_HAIRTONIC_TOWNARCH)
		(NOT-AT_LOVELETTER_TOWNSQUARE)
		(NOT-AT_LOVELETTER_TOWNARCH)
		(NOT-AT_ASH_TOWNSQUARE)
		(NOT-AT_ASH_TOWNARCH)
		(NOT-AT_MIRROR_SHOP)
		(NOT-AT_MIRROR_TOWNSQUARE)
		(NOT-AT_MUSHROOM_SHOP)
		(NOT-AT_MUSHROOM_TOWNSQUARE)
		(NOT-AT_SHINYKEY_TOWNSQUARE)
		(NOT-AT_SHINYKEY_TOWNARCH)
		(AT_MIRROR_TOWNARCH)
		(AT_MUSHROOM_TOWNARCH)
		(AT_ARTHUR_SHOP)
		(WANTS-ITEM_GIOVANNA_HAIRTONIC)
		(NOT-HAS_GIOVANNA_HAIRTONIC)
		(NOT-AT_KNIGHTSWORD_SHOP)
		(NOT-AT_HAIRTONIC_SHOP)
		(NOT-AT_LOVELETTER_SHOP)
		(NOT-AT_ASH_SHOP)
		(NOT-AT_SHINYKEY_SHOP)
		(AT_RUBYRING_SHOP)
		(AT_KNIGHTSHIELD_SHOP)
		(EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1)
		(EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE_1)
		(EXPLAINED_MOVE-THROUGH-DOOR_ARTHUR_TOWNSQUARE_TOWNGATE_TOWNARCH_1)
		(EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNARCH_HUTENTRANCE_HUT_1)
		(EXPLAINED_PICKUP_ARTHUR_HAIRTONIC_HUT_1)
		(EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_HUT_HUTEXIT_TOWNARCH_1)
		(EXPLAINED_MOVE-THROUGH-DOOR_ARTHUR_TOWNARCH_TOWNGATE_TOWNSQUARE_1)
		(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1)
		(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE_1)
		(NOT_EXPLAINED_MOVE-THROUGH-DOOR_ARTHUR_TOWNSQUARE_TOWNGATE_TOWNARCH_1)
		(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNARCH_HUTENTRANCE_HUT_1)
		(NOT_EXPLAINED_PICKUP_ARTHUR_HAIRTONIC_HUT_1)
		(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_HUT_HUTEXIT_TOWNARCH_1)
		(NOT_EXPLAINED_MOVE-THROUGH-DOOR_ARTHUR_TOWNARCH_TOWNGATE_TOWNSQUARE_1)
		(EXPLAINED_FULL_OBS_SEQUENCE)
		(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
	) 
	(:functions (total-cost))
	(:action EXPLAIN_OBS_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			 (EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_SHOP))
			 (not (NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1))
		)
	)
	(:action EXPLAIN_OBS_MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE_1
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			(EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
			 (EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE_1)
			(not (AT_ARTHUR_SHOP))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
			 (not (NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE_1))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_SHOP))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action EXPLAIN_OBS_MOVE-THROUGH-DOOR_ARTHUR_TOWNSQUARE_TOWNGATE_TOWNARCH_1
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_TOWNSQUARE)
			(EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE_1)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_TOWNARCH)
			 (EXPLAINED_MOVE-THROUGH-DOOR_ARTHUR_TOWNSQUARE_TOWNGATE_TOWNARCH_1)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_TOWNARCH))
			 (not (NOT_EXPLAINED_MOVE-THROUGH-DOOR_ARTHUR_TOWNSQUARE_TOWNGATE_TOWNARCH_1))
		)
	)
	(:action MOVE-THROUGH-DOOR_ARTHUR_TOWNSQUARE_TOWNGATE_TOWNARCH
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_TOWNSQUARE)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_TOWNARCH)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_TOWNARCH))
		)
	)
	(:action MOVE-THROUGH-DOOR_ARTHUR_TOWNSQUARE_TOWNGATE_TOWNARCH
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_TOWNSQUARE)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_TOWNARCH)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_TOWNARCH))
		)
	)
	(:action EXPLAIN_OBS_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNARCH_HUTENTRANCE_HUT_1
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_HUT)
			(AT_ARTHUR_TOWNARCH)
			(EXPLAINED_MOVE-THROUGH-DOOR_ARTHUR_TOWNSQUARE_TOWNGATE_TOWNARCH_1)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_HUT)
			 (EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNARCH_HUTENTRANCE_HUT_1)
			(not (AT_ARTHUR_TOWNARCH))
			(not (NOT-AT_ARTHUR_HUT))
			 (not (NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNARCH_HUTENTRANCE_HUT_1))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNARCH_HUTENTRANCE_HUT
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_HUT)
			(AT_ARTHUR_TOWNARCH)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_HUT)
			(not (AT_ARTHUR_TOWNARCH))
			(not (NOT-AT_ARTHUR_HUT))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNARCH_HUTENTRANCE_HUT
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_HUT)
			(AT_ARTHUR_TOWNARCH)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_HUT)
			(not (AT_ARTHUR_TOWNARCH))
			(not (NOT-AT_ARTHUR_HUT))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNARCH_HUTENTRANCE_HUT
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_HUT)
			(AT_ARTHUR_TOWNARCH)
			(NOT_EXPLAINED_MOVE-THROUGH-DOOR_ARTHUR_TOWNSQUARE_TOWNGATE_TOWNARCH_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_HUT)
			(not (AT_ARTHUR_TOWNARCH))
			(not (NOT-AT_ARTHUR_HUT))
		)
	)
	(:action EXPLAIN_OBS_PICKUP_ARTHUR_HAIRTONIC_HUT_1
		:parameters ()
		:precondition
		(and
			(AT_HAIRTONIC_HUT)
			(AT_ARTHUR_HUT)
			(EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNARCH_HUTENTRANCE_HUT_1)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_HAIRTONIC_HUT)
			(HAS_ARTHUR_HAIRTONIC)
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			 (EXPLAINED_PICKUP_ARTHUR_HAIRTONIC_HUT_1)
			(not (AT_HAIRTONIC_HUT))
			(not (NOT-HAS_ARTHUR_HAIRTONIC))
			 (not (NOT_EXPLAINED_PICKUP_ARTHUR_HAIRTONIC_HUT_1))
		)
	)
	(:action PICKUP_ARTHUR_HAIRTONIC_HUT
		:parameters ()
		:precondition
		(and
			(AT_HAIRTONIC_HUT)
			(AT_ARTHUR_HUT)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_HAIRTONIC_HUT)
			(HAS_ARTHUR_HAIRTONIC)
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(not (AT_HAIRTONIC_HUT))
			(not (NOT-HAS_ARTHUR_HAIRTONIC))
		)
	)
	(:action PICKUP_ARTHUR_HAIRTONIC_HUT
		:parameters ()
		:precondition
		(and
			(AT_HAIRTONIC_HUT)
			(AT_ARTHUR_HUT)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_HAIRTONIC_HUT)
			(HAS_ARTHUR_HAIRTONIC)
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(not (AT_HAIRTONIC_HUT))
			(not (NOT-HAS_ARTHUR_HAIRTONIC))
		)
	)
	(:action PICKUP_ARTHUR_HAIRTONIC_HUT
		:parameters ()
		:precondition
		(and
			(AT_HAIRTONIC_HUT)
			(AT_ARTHUR_HUT)
			(NOT_EXPLAINED_MOVE-THROUGH-DOOR_ARTHUR_TOWNSQUARE_TOWNGATE_TOWNARCH_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_HAIRTONIC_HUT)
			(HAS_ARTHUR_HAIRTONIC)
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(not (AT_HAIRTONIC_HUT))
			(not (NOT-HAS_ARTHUR_HAIRTONIC))
		)
	)
	(:action PICKUP_ARTHUR_HAIRTONIC_HUT
		:parameters ()
		:precondition
		(and
			(AT_HAIRTONIC_HUT)
			(AT_ARTHUR_HUT)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNARCH_HUTENTRANCE_HUT_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_HAIRTONIC_HUT)
			(HAS_ARTHUR_HAIRTONIC)
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(not (AT_HAIRTONIC_HUT))
			(not (NOT-HAS_ARTHUR_HAIRTONIC))
		)
	)
	(:action EXPLAIN_OBS_MOVE-THROUGH-ENTRANCE_ARTHUR_HUT_HUTEXIT_TOWNARCH_1
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_HUT)
			(EXPLAINED_PICKUP_ARTHUR_HAIRTONIC_HUT_1)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_HUT)
			(AT_ARTHUR_TOWNARCH)
			 (EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_HUT_HUTEXIT_TOWNARCH_1)
			(not (AT_ARTHUR_HUT))
			(not (NOT-AT_ARTHUR_TOWNARCH))
			 (not (NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_HUT_HUTEXIT_TOWNARCH_1))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_HUT_HUTEXIT_TOWNARCH
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_HUT)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_HUT)
			(AT_ARTHUR_TOWNARCH)
			(not (AT_ARTHUR_HUT))
			(not (NOT-AT_ARTHUR_TOWNARCH))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_HUT_HUTEXIT_TOWNARCH
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_HUT)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_HUT)
			(AT_ARTHUR_TOWNARCH)
			(not (AT_ARTHUR_HUT))
			(not (NOT-AT_ARTHUR_TOWNARCH))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_HUT_HUTEXIT_TOWNARCH
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_HUT)
			(NOT_EXPLAINED_MOVE-THROUGH-DOOR_ARTHUR_TOWNSQUARE_TOWNGATE_TOWNARCH_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_HUT)
			(AT_ARTHUR_TOWNARCH)
			(not (AT_ARTHUR_HUT))
			(not (NOT-AT_ARTHUR_TOWNARCH))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_HUT_HUTEXIT_TOWNARCH
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_HUT)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNARCH_HUTENTRANCE_HUT_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_HUT)
			(AT_ARTHUR_TOWNARCH)
			(not (AT_ARTHUR_HUT))
			(not (NOT-AT_ARTHUR_TOWNARCH))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_HUT_HUTEXIT_TOWNARCH
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_HUT)
			(NOT_EXPLAINED_PICKUP_ARTHUR_HAIRTONIC_HUT_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_HUT)
			(AT_ARTHUR_TOWNARCH)
			(not (AT_ARTHUR_HUT))
			(not (NOT-AT_ARTHUR_TOWNARCH))
		)
	)
	(:action EXPLAIN_OBS_MOVE-THROUGH-DOOR_ARTHUR_TOWNARCH_TOWNGATE_TOWNSQUARE_1
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_TOWNARCH)
			(EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_HUT_HUTEXIT_TOWNARCH_1)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_TOWNSQUARE)
			 (EXPLAINED_MOVE-THROUGH-DOOR_ARTHUR_TOWNARCH_TOWNGATE_TOWNSQUARE_1)
			 (EXPLAINED_FULL_OBS_SEQUENCE)
			(not (AT_ARTHUR_TOWNARCH))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
			 (not (NOT_EXPLAINED_MOVE-THROUGH-DOOR_ARTHUR_TOWNARCH_TOWNGATE_TOWNSQUARE_1))
			 (not (NOT_EXPLAINED_FULL_OBS_SEQUENCE))
		)
	)
	(:action MOVE-THROUGH-DOOR_ARTHUR_TOWNARCH_TOWNGATE_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_TOWNARCH)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_TOWNARCH))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action MOVE-THROUGH-DOOR_ARTHUR_TOWNARCH_TOWNGATE_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_TOWNARCH)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_TOWNARCH))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action MOVE-THROUGH-DOOR_ARTHUR_TOWNARCH_TOWNGATE_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_TOWNARCH)
			(NOT_EXPLAINED_MOVE-THROUGH-DOOR_ARTHUR_TOWNSQUARE_TOWNGATE_TOWNARCH_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_TOWNARCH))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action MOVE-THROUGH-DOOR_ARTHUR_TOWNARCH_TOWNGATE_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_TOWNARCH)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNARCH_HUTENTRANCE_HUT_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_TOWNARCH))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action MOVE-THROUGH-DOOR_ARTHUR_TOWNARCH_TOWNGATE_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_TOWNARCH)
			(NOT_EXPLAINED_PICKUP_ARTHUR_HAIRTONIC_HUT_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_TOWNARCH))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action MOVE-THROUGH-DOOR_ARTHUR_TOWNARCH_TOWNGATE_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_TOWNARCH)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_HUT_HUTEXIT_TOWNARCH_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_TOWNARCH))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_JUNKYARD
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_JUNKYARD)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_JUNKYARD)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_JUNKYARD))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_STORAGE
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_STORAGE)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_STORAGE)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_STORAGE))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_JUNKYARD
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_JUNKYARD)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_JUNKYARD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_JUNKYARD))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_STORAGE
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_STORAGE)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_STORAGE)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_STORAGE))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_ROPE_JUNKYARD
		:parameters ()
		:precondition
		(and
			(AT_ROPE_JUNKYARD)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ROPE_JUNKYARD)
			(HAS_ARTHUR_ROPE)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(not (AT_ROPE_JUNKYARD))
			(not (NOT-HAS_ARTHUR_ROPE))
		)
	)
	(:action PICKUP_ARTHUR_ROPE_STORAGE
		:parameters ()
		:precondition
		(and
			(AT_ROPE_STORAGE)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ROPE_STORAGE)
			(HAS_ARTHUR_ROPE)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(not (AT_ROPE_STORAGE))
			(not (NOT-HAS_ARTHUR_ROPE))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSWORD_JUNKYARD
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSWORD_JUNKYARD)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSWORD_JUNKYARD)
			(HAS_ARTHUR_KNIGHTSWORD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(not (AT_KNIGHTSWORD_JUNKYARD))
			(not (NOT-HAS_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSWORD_STORAGE
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSWORD_STORAGE)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSWORD_STORAGE)
			(HAS_ARTHUR_KNIGHTSWORD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(not (AT_KNIGHTSWORD_STORAGE))
			(not (NOT-HAS_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action PICKUP_ARTHUR_BOOK_JUNKYARD
		:parameters ()
		:precondition
		(and
			(AT_BOOK_JUNKYARD)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BOOK_JUNKYARD)
			(HAS_ARTHUR_BOOK)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(not (AT_BOOK_JUNKYARD))
			(not (NOT-HAS_ARTHUR_BOOK))
		)
	)
	(:action PICKUP_ARTHUR_BOOK_STORAGE
		:parameters ()
		:precondition
		(and
			(AT_BOOK_STORAGE)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BOOK_STORAGE)
			(HAS_ARTHUR_BOOK)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(not (AT_BOOK_STORAGE))
			(not (NOT-HAS_ARTHUR_BOOK))
		)
	)
	(:action PICKUP_ARTHUR_HAIRTONIC_JUNKYARD
		:parameters ()
		:precondition
		(and
			(AT_HAIRTONIC_JUNKYARD)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_HAIRTONIC_JUNKYARD)
			(HAS_ARTHUR_HAIRTONIC)
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(not (AT_HAIRTONIC_JUNKYARD))
			(not (NOT-HAS_ARTHUR_HAIRTONIC))
		)
	)
	(:action PICKUP_ARTHUR_HAIRTONIC_STORAGE
		:parameters ()
		:precondition
		(and
			(AT_HAIRTONIC_STORAGE)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_HAIRTONIC_STORAGE)
			(HAS_ARTHUR_HAIRTONIC)
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(not (AT_HAIRTONIC_STORAGE))
			(not (NOT-HAS_ARTHUR_HAIRTONIC))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_JUNKYARD
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_JUNKYARD)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_JUNKYARD)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_JUNKYARD))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_STORAGE
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_STORAGE)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_STORAGE)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_STORAGE))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_ASH_JUNKYARD
		:parameters ()
		:precondition
		(and
			(AT_ASH_JUNKYARD)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ASH_JUNKYARD)
			(HAS_ARTHUR_ASH)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(not (AT_ASH_JUNKYARD))
			(not (NOT-HAS_ARTHUR_ASH))
		)
	)
	(:action PICKUP_ARTHUR_ASH_STORAGE
		:parameters ()
		:precondition
		(and
			(AT_ASH_STORAGE)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ASH_STORAGE)
			(HAS_ARTHUR_ASH)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(not (AT_ASH_STORAGE))
			(not (NOT-HAS_ARTHUR_ASH))
		)
	)
	(:action PICKUP_ARTHUR_MIRROR_JUNKYARD
		:parameters ()
		:precondition
		(and
			(AT_MIRROR_JUNKYARD)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MIRROR_JUNKYARD)
			(HAS_ARTHUR_MIRROR)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(not (AT_MIRROR_JUNKYARD))
			(not (NOT-HAS_ARTHUR_MIRROR))
		)
	)
	(:action PICKUP_ARTHUR_MIRROR_STORAGE
		:parameters ()
		:precondition
		(and
			(AT_MIRROR_STORAGE)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MIRROR_STORAGE)
			(HAS_ARTHUR_MIRROR)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(not (AT_MIRROR_STORAGE))
			(not (NOT-HAS_ARTHUR_MIRROR))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_JUNKYARD
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_JUNKYARD)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_JUNKYARD)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_JUNKYARD))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_STORAGE
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_STORAGE)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_STORAGE)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_STORAGE))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_SHINYKEY_JUNKYARD
		:parameters ()
		:precondition
		(and
			(AT_SHINYKEY_JUNKYARD)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SHINYKEY_JUNKYARD)
			(HAS_ARTHUR_SHINYKEY)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(not (AT_SHINYKEY_JUNKYARD))
			(not (NOT-HAS_ARTHUR_SHINYKEY))
		)
	)
	(:action PICKUP_ARTHUR_SHINYKEY_STORAGE
		:parameters ()
		:precondition
		(and
			(AT_SHINYKEY_STORAGE)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SHINYKEY_STORAGE)
			(HAS_ARTHUR_SHINYKEY)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(not (AT_SHINYKEY_STORAGE))
			(not (NOT-HAS_ARTHUR_SHINYKEY))
		)
	)
	(:action MOVE-THROUGH-DOORWAY_ARTHUR_STORAGE_BASEMENT
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_BASEMENT)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_STORAGE)
			(AT_ARTHUR_BASEMENT)
			(not (AT_ARTHUR_STORAGE))
			(not (NOT-AT_ARTHUR_BASEMENT))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_JUNKYARD
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_JUNKYARD)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_JUNKYARD))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_STORAGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_STORAGE)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_STORAGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_JUNKYARD
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_JUNKYARD)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_JUNKYARD))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_STORAGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_STORAGE)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_STORAGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_ROPE_JUNKYARD
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(HAS_ARTHUR_ROPE)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ROPE)
			(AT_ROPE_JUNKYARD)
			(not (HAS_ARTHUR_ROPE))
			(not (NOT-AT_ROPE_JUNKYARD))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ROPE))
		)
	)
	(:action DROP_ARTHUR_ROPE_STORAGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(HAS_ARTHUR_ROPE)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ROPE)
			(AT_ROPE_STORAGE)
			(not (HAS_ARTHUR_ROPE))
			(not (NOT-AT_ROPE_STORAGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ROPE))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSWORD_JUNKYARD
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(HAS_ARTHUR_KNIGHTSWORD)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSWORD)
			(AT_KNIGHTSWORD_JUNKYARD)
			(not (HAS_ARTHUR_KNIGHTSWORD))
			(not (NOT-AT_KNIGHTSWORD_JUNKYARD))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSWORD_STORAGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(HAS_ARTHUR_KNIGHTSWORD)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSWORD)
			(AT_KNIGHTSWORD_STORAGE)
			(not (HAS_ARTHUR_KNIGHTSWORD))
			(not (NOT-AT_KNIGHTSWORD_STORAGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action DROP_ARTHUR_BOOK_JUNKYARD
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(HAS_ARTHUR_BOOK)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BOOK)
			(AT_BOOK_JUNKYARD)
			(not (HAS_ARTHUR_BOOK))
			(not (NOT-AT_BOOK_JUNKYARD))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BOOK))
		)
	)
	(:action DROP_ARTHUR_BOOK_STORAGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(HAS_ARTHUR_BOOK)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BOOK)
			(AT_BOOK_STORAGE)
			(not (HAS_ARTHUR_BOOK))
			(not (NOT-AT_BOOK_STORAGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BOOK))
		)
	)
	(:action DROP_ARTHUR_HAIRTONIC_JUNKYARD
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(HAS_ARTHUR_HAIRTONIC)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_HAIRTONIC)
			(AT_HAIRTONIC_JUNKYARD)
			(not (HAS_ARTHUR_HAIRTONIC))
			(not (NOT-AT_HAIRTONIC_JUNKYARD))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC))
		)
	)
	(:action DROP_ARTHUR_HAIRTONIC_STORAGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(HAS_ARTHUR_HAIRTONIC)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_HAIRTONIC)
			(AT_HAIRTONIC_STORAGE)
			(not (HAS_ARTHUR_HAIRTONIC))
			(not (NOT-AT_HAIRTONIC_STORAGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_JUNKYARD
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_JUNKYARD)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_JUNKYARD))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_STORAGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_STORAGE)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_STORAGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_ASH_JUNKYARD
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(HAS_ARTHUR_ASH)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ASH)
			(AT_ASH_JUNKYARD)
			(not (HAS_ARTHUR_ASH))
			(not (NOT-AT_ASH_JUNKYARD))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ASH))
		)
	)
	(:action DROP_ARTHUR_ASH_STORAGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(HAS_ARTHUR_ASH)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ASH)
			(AT_ASH_STORAGE)
			(not (HAS_ARTHUR_ASH))
			(not (NOT-AT_ASH_STORAGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ASH))
		)
	)
	(:action DROP_ARTHUR_MIRROR_JUNKYARD
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(HAS_ARTHUR_MIRROR)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MIRROR)
			(AT_MIRROR_JUNKYARD)
			(not (HAS_ARTHUR_MIRROR))
			(not (NOT-AT_MIRROR_JUNKYARD))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR))
		)
	)
	(:action DROP_ARTHUR_MIRROR_STORAGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(HAS_ARTHUR_MIRROR)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MIRROR)
			(AT_MIRROR_STORAGE)
			(not (HAS_ARTHUR_MIRROR))
			(not (NOT-AT_MIRROR_STORAGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_JUNKYARD
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_JUNKYARD)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_JUNKYARD))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_STORAGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_STORAGE)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_STORAGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_SHINYKEY_JUNKYARD
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(HAS_ARTHUR_SHINYKEY)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SHINYKEY)
			(AT_SHINYKEY_JUNKYARD)
			(not (HAS_ARTHUR_SHINYKEY))
			(not (NOT-AT_SHINYKEY_JUNKYARD))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY))
		)
	)
	(:action DROP_ARTHUR_SHINYKEY_STORAGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(HAS_ARTHUR_SHINYKEY)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SHINYKEY)
			(AT_SHINYKEY_STORAGE)
			(not (HAS_ARTHUR_SHINYKEY))
			(not (NOT-AT_SHINYKEY_STORAGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_BANK
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_BANK)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_BANK)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_BANK))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_VALLEY
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_VALLEY)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_VALLEY)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_VALLEY))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_MANSION
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_MANSION)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_MANSION)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_MANSION))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_CLIFF
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_CLIFF)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_CLIFF)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_CLIFF))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_FORGE
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_FORGE)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_FORGE)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_FORGE))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_HUT
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_HUT)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_HUT)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_HUT))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_DOCKS
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_DOCKS)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_DOCKS)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_DOCKS))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_BAR
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_BAR)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_BAR)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_BAR))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_BASEMENT
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_BASEMENT)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_BASEMENT)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_BASEMENT))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_BANK
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_BANK)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_BANK)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_BANK))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_VALLEY
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_VALLEY)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_VALLEY)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_VALLEY))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_MANSION
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_MANSION)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_MANSION)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_MANSION))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_CLIFF
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_CLIFF)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_CLIFF)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_CLIFF))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_FORGE
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_FORGE)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_FORGE)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_FORGE))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_HUT
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_HUT)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_HUT)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_HUT))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_DOCKS
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_DOCKS)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_DOCKS)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_DOCKS))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_BAR
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_BAR)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_BAR)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_BAR))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_BASEMENT
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_BASEMENT)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_BASEMENT)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_BASEMENT))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_ROPE_BANK
		:parameters ()
		:precondition
		(and
			(AT_ROPE_BANK)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ROPE_BANK)
			(HAS_ARTHUR_ROPE)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(not (AT_ROPE_BANK))
			(not (NOT-HAS_ARTHUR_ROPE))
		)
	)
	(:action PICKUP_ARTHUR_ROPE_VALLEY
		:parameters ()
		:precondition
		(and
			(AT_ROPE_VALLEY)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ROPE_VALLEY)
			(HAS_ARTHUR_ROPE)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(not (AT_ROPE_VALLEY))
			(not (NOT-HAS_ARTHUR_ROPE))
		)
	)
	(:action PICKUP_ARTHUR_ROPE_MANSION
		:parameters ()
		:precondition
		(and
			(AT_ROPE_MANSION)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ROPE_MANSION)
			(HAS_ARTHUR_ROPE)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(not (AT_ROPE_MANSION))
			(not (NOT-HAS_ARTHUR_ROPE))
		)
	)
	(:action PICKUP_ARTHUR_ROPE_CLIFF
		:parameters ()
		:precondition
		(and
			(AT_ROPE_CLIFF)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ROPE_CLIFF)
			(HAS_ARTHUR_ROPE)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(not (AT_ROPE_CLIFF))
			(not (NOT-HAS_ARTHUR_ROPE))
		)
	)
	(:action PICKUP_ARTHUR_ROPE_SHOP
		:parameters ()
		:precondition
		(and
			(AT_ROPE_SHOP)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ROPE_SHOP)
			(HAS_ARTHUR_ROPE)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(not (AT_ROPE_SHOP))
			(not (NOT-HAS_ARTHUR_ROPE))
		)
	)
	(:action PICKUP_ARTHUR_ROPE_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(AT_ROPE_TOWNSQUARE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ROPE_TOWNSQUARE)
			(HAS_ARTHUR_ROPE)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(not (AT_ROPE_TOWNSQUARE))
			(not (NOT-HAS_ARTHUR_ROPE))
		)
	)
	(:action PICKUP_ARTHUR_ROPE_HUT
		:parameters ()
		:precondition
		(and
			(AT_ROPE_HUT)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ROPE_HUT)
			(HAS_ARTHUR_ROPE)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(not (AT_ROPE_HUT))
			(not (NOT-HAS_ARTHUR_ROPE))
		)
	)
	(:action PICKUP_ARTHUR_ROPE_TOWNARCH
		:parameters ()
		:precondition
		(and
			(AT_ROPE_TOWNARCH)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ROPE_TOWNARCH)
			(HAS_ARTHUR_ROPE)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(not (AT_ROPE_TOWNARCH))
			(not (NOT-HAS_ARTHUR_ROPE))
		)
	)
	(:action PICKUP_ARTHUR_ROPE_DOCKS
		:parameters ()
		:precondition
		(and
			(AT_ROPE_DOCKS)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ROPE_DOCKS)
			(HAS_ARTHUR_ROPE)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(not (AT_ROPE_DOCKS))
			(not (NOT-HAS_ARTHUR_ROPE))
		)
	)
	(:action PICKUP_ARTHUR_ROPE_BAR
		:parameters ()
		:precondition
		(and
			(AT_ROPE_BAR)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ROPE_BAR)
			(HAS_ARTHUR_ROPE)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(not (AT_ROPE_BAR))
			(not (NOT-HAS_ARTHUR_ROPE))
		)
	)
	(:action PICKUP_ARTHUR_ROPE_BASEMENT
		:parameters ()
		:precondition
		(and
			(AT_ROPE_BASEMENT)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ROPE_BASEMENT)
			(HAS_ARTHUR_ROPE)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(not (AT_ROPE_BASEMENT))
			(not (NOT-HAS_ARTHUR_ROPE))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSWORD_BANK
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSWORD_BANK)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSWORD_BANK)
			(HAS_ARTHUR_KNIGHTSWORD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(not (AT_KNIGHTSWORD_BANK))
			(not (NOT-HAS_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSWORD_VALLEY
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSWORD_VALLEY)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSWORD_VALLEY)
			(HAS_ARTHUR_KNIGHTSWORD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(not (AT_KNIGHTSWORD_VALLEY))
			(not (NOT-HAS_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSWORD_MANSION
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSWORD_MANSION)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSWORD_MANSION)
			(HAS_ARTHUR_KNIGHTSWORD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(not (AT_KNIGHTSWORD_MANSION))
			(not (NOT-HAS_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSWORD_CLIFF
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSWORD_CLIFF)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSWORD_CLIFF)
			(HAS_ARTHUR_KNIGHTSWORD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(not (AT_KNIGHTSWORD_CLIFF))
			(not (NOT-HAS_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSWORD_FORGE
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSWORD_FORGE)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSWORD_FORGE)
			(HAS_ARTHUR_KNIGHTSWORD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(not (AT_KNIGHTSWORD_FORGE))
			(not (NOT-HAS_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSWORD_HUT
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSWORD_HUT)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSWORD_HUT)
			(HAS_ARTHUR_KNIGHTSWORD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(not (AT_KNIGHTSWORD_HUT))
			(not (NOT-HAS_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSWORD_DOCKS
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSWORD_DOCKS)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSWORD_DOCKS)
			(HAS_ARTHUR_KNIGHTSWORD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(not (AT_KNIGHTSWORD_DOCKS))
			(not (NOT-HAS_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSWORD_BAR
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSWORD_BAR)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSWORD_BAR)
			(HAS_ARTHUR_KNIGHTSWORD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(not (AT_KNIGHTSWORD_BAR))
			(not (NOT-HAS_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSWORD_BASEMENT
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSWORD_BASEMENT)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSWORD_BASEMENT)
			(HAS_ARTHUR_KNIGHTSWORD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(not (AT_KNIGHTSWORD_BASEMENT))
			(not (NOT-HAS_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action PICKUP_ARTHUR_BOOK_BANK
		:parameters ()
		:precondition
		(and
			(AT_BOOK_BANK)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BOOK_BANK)
			(HAS_ARTHUR_BOOK)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(not (AT_BOOK_BANK))
			(not (NOT-HAS_ARTHUR_BOOK))
		)
	)
	(:action PICKUP_ARTHUR_BOOK_VALLEY
		:parameters ()
		:precondition
		(and
			(AT_BOOK_VALLEY)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BOOK_VALLEY)
			(HAS_ARTHUR_BOOK)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(not (AT_BOOK_VALLEY))
			(not (NOT-HAS_ARTHUR_BOOK))
		)
	)
	(:action PICKUP_ARTHUR_BOOK_MANSION
		:parameters ()
		:precondition
		(and
			(AT_BOOK_MANSION)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BOOK_MANSION)
			(HAS_ARTHUR_BOOK)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(not (AT_BOOK_MANSION))
			(not (NOT-HAS_ARTHUR_BOOK))
		)
	)
	(:action PICKUP_ARTHUR_BOOK_CLIFF
		:parameters ()
		:precondition
		(and
			(AT_BOOK_CLIFF)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BOOK_CLIFF)
			(HAS_ARTHUR_BOOK)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(not (AT_BOOK_CLIFF))
			(not (NOT-HAS_ARTHUR_BOOK))
		)
	)
	(:action PICKUP_ARTHUR_BOOK_SHOP
		:parameters ()
		:precondition
		(and
			(AT_BOOK_SHOP)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BOOK_SHOP)
			(HAS_ARTHUR_BOOK)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(not (AT_BOOK_SHOP))
			(not (NOT-HAS_ARTHUR_BOOK))
		)
	)
	(:action PICKUP_ARTHUR_BOOK_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(AT_BOOK_TOWNSQUARE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BOOK_TOWNSQUARE)
			(HAS_ARTHUR_BOOK)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(not (AT_BOOK_TOWNSQUARE))
			(not (NOT-HAS_ARTHUR_BOOK))
		)
	)
	(:action PICKUP_ARTHUR_BOOK_FORGE
		:parameters ()
		:precondition
		(and
			(AT_BOOK_FORGE)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BOOK_FORGE)
			(HAS_ARTHUR_BOOK)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(not (AT_BOOK_FORGE))
			(not (NOT-HAS_ARTHUR_BOOK))
		)
	)
	(:action PICKUP_ARTHUR_BOOK_TOWNARCH
		:parameters ()
		:precondition
		(and
			(AT_BOOK_TOWNARCH)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BOOK_TOWNARCH)
			(HAS_ARTHUR_BOOK)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(not (AT_BOOK_TOWNARCH))
			(not (NOT-HAS_ARTHUR_BOOK))
		)
	)
	(:action PICKUP_ARTHUR_BOOK_DOCKS
		:parameters ()
		:precondition
		(and
			(AT_BOOK_DOCKS)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BOOK_DOCKS)
			(HAS_ARTHUR_BOOK)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(not (AT_BOOK_DOCKS))
			(not (NOT-HAS_ARTHUR_BOOK))
		)
	)
	(:action PICKUP_ARTHUR_BOOK_BAR
		:parameters ()
		:precondition
		(and
			(AT_BOOK_BAR)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BOOK_BAR)
			(HAS_ARTHUR_BOOK)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(not (AT_BOOK_BAR))
			(not (NOT-HAS_ARTHUR_BOOK))
		)
	)
	(:action PICKUP_ARTHUR_BOOK_BASEMENT
		:parameters ()
		:precondition
		(and
			(AT_BOOK_BASEMENT)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BOOK_BASEMENT)
			(HAS_ARTHUR_BOOK)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(not (AT_BOOK_BASEMENT))
			(not (NOT-HAS_ARTHUR_BOOK))
		)
	)
	(:action PICKUP_ARTHUR_HAIRTONIC_BANK
		:parameters ()
		:precondition
		(and
			(AT_HAIRTONIC_BANK)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_HAIRTONIC_BANK)
			(HAS_ARTHUR_HAIRTONIC)
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(not (AT_HAIRTONIC_BANK))
			(not (NOT-HAS_ARTHUR_HAIRTONIC))
		)
	)
	(:action PICKUP_ARTHUR_HAIRTONIC_VALLEY
		:parameters ()
		:precondition
		(and
			(AT_HAIRTONIC_VALLEY)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_HAIRTONIC_VALLEY)
			(HAS_ARTHUR_HAIRTONIC)
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(not (AT_HAIRTONIC_VALLEY))
			(not (NOT-HAS_ARTHUR_HAIRTONIC))
		)
	)
	(:action PICKUP_ARTHUR_HAIRTONIC_MANSION
		:parameters ()
		:precondition
		(and
			(AT_HAIRTONIC_MANSION)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_HAIRTONIC_MANSION)
			(HAS_ARTHUR_HAIRTONIC)
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(not (AT_HAIRTONIC_MANSION))
			(not (NOT-HAS_ARTHUR_HAIRTONIC))
		)
	)
	(:action PICKUP_ARTHUR_HAIRTONIC_CLIFF
		:parameters ()
		:precondition
		(and
			(AT_HAIRTONIC_CLIFF)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_HAIRTONIC_CLIFF)
			(HAS_ARTHUR_HAIRTONIC)
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(not (AT_HAIRTONIC_CLIFF))
			(not (NOT-HAS_ARTHUR_HAIRTONIC))
		)
	)
	(:action PICKUP_ARTHUR_HAIRTONIC_FORGE
		:parameters ()
		:precondition
		(and
			(AT_HAIRTONIC_FORGE)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_HAIRTONIC_FORGE)
			(HAS_ARTHUR_HAIRTONIC)
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(not (AT_HAIRTONIC_FORGE))
			(not (NOT-HAS_ARTHUR_HAIRTONIC))
		)
	)
	(:action PICKUP_ARTHUR_HAIRTONIC_DOCKS
		:parameters ()
		:precondition
		(and
			(AT_HAIRTONIC_DOCKS)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_HAIRTONIC_DOCKS)
			(HAS_ARTHUR_HAIRTONIC)
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(not (AT_HAIRTONIC_DOCKS))
			(not (NOT-HAS_ARTHUR_HAIRTONIC))
		)
	)
	(:action PICKUP_ARTHUR_HAIRTONIC_BAR
		:parameters ()
		:precondition
		(and
			(AT_HAIRTONIC_BAR)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_HAIRTONIC_BAR)
			(HAS_ARTHUR_HAIRTONIC)
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(not (AT_HAIRTONIC_BAR))
			(not (NOT-HAS_ARTHUR_HAIRTONIC))
		)
	)
	(:action PICKUP_ARTHUR_HAIRTONIC_BASEMENT
		:parameters ()
		:precondition
		(and
			(AT_HAIRTONIC_BASEMENT)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_HAIRTONIC_BASEMENT)
			(HAS_ARTHUR_HAIRTONIC)
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(not (AT_HAIRTONIC_BASEMENT))
			(not (NOT-HAS_ARTHUR_HAIRTONIC))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_BANK
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_BANK)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_BANK)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_BANK))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_VALLEY
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_VALLEY)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_VALLEY)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_VALLEY))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_MANSION
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_MANSION)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_MANSION)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_MANSION))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_CLIFF
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_CLIFF)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_CLIFF)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_CLIFF))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_FORGE
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_FORGE)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_FORGE)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_FORGE))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_HUT
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_HUT)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_HUT)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_HUT))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_DOCKS
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_DOCKS)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_DOCKS)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_DOCKS))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_BAR
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_BAR)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_BAR)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_BAR))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_BASEMENT
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_BASEMENT)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_BASEMENT)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_BASEMENT))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_ASH_BANK
		:parameters ()
		:precondition
		(and
			(AT_ASH_BANK)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ASH_BANK)
			(HAS_ARTHUR_ASH)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(not (AT_ASH_BANK))
			(not (NOT-HAS_ARTHUR_ASH))
		)
	)
	(:action PICKUP_ARTHUR_ASH_VALLEY
		:parameters ()
		:precondition
		(and
			(AT_ASH_VALLEY)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ASH_VALLEY)
			(HAS_ARTHUR_ASH)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(not (AT_ASH_VALLEY))
			(not (NOT-HAS_ARTHUR_ASH))
		)
	)
	(:action PICKUP_ARTHUR_ASH_MANSION
		:parameters ()
		:precondition
		(and
			(AT_ASH_MANSION)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ASH_MANSION)
			(HAS_ARTHUR_ASH)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(not (AT_ASH_MANSION))
			(not (NOT-HAS_ARTHUR_ASH))
		)
	)
	(:action PICKUP_ARTHUR_ASH_CLIFF
		:parameters ()
		:precondition
		(and
			(AT_ASH_CLIFF)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ASH_CLIFF)
			(HAS_ARTHUR_ASH)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(not (AT_ASH_CLIFF))
			(not (NOT-HAS_ARTHUR_ASH))
		)
	)
	(:action PICKUP_ARTHUR_ASH_FORGE
		:parameters ()
		:precondition
		(and
			(AT_ASH_FORGE)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ASH_FORGE)
			(HAS_ARTHUR_ASH)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(not (AT_ASH_FORGE))
			(not (NOT-HAS_ARTHUR_ASH))
		)
	)
	(:action PICKUP_ARTHUR_ASH_HUT
		:parameters ()
		:precondition
		(and
			(AT_ASH_HUT)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ASH_HUT)
			(HAS_ARTHUR_ASH)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(not (AT_ASH_HUT))
			(not (NOT-HAS_ARTHUR_ASH))
		)
	)
	(:action PICKUP_ARTHUR_ASH_DOCKS
		:parameters ()
		:precondition
		(and
			(AT_ASH_DOCKS)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ASH_DOCKS)
			(HAS_ARTHUR_ASH)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(not (AT_ASH_DOCKS))
			(not (NOT-HAS_ARTHUR_ASH))
		)
	)
	(:action PICKUP_ARTHUR_ASH_BAR
		:parameters ()
		:precondition
		(and
			(AT_ASH_BAR)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ASH_BAR)
			(HAS_ARTHUR_ASH)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(not (AT_ASH_BAR))
			(not (NOT-HAS_ARTHUR_ASH))
		)
	)
	(:action PICKUP_ARTHUR_ASH_BASEMENT
		:parameters ()
		:precondition
		(and
			(AT_ASH_BASEMENT)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ASH_BASEMENT)
			(HAS_ARTHUR_ASH)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(not (AT_ASH_BASEMENT))
			(not (NOT-HAS_ARTHUR_ASH))
		)
	)
	(:action PICKUP_ARTHUR_MIRROR_BANK
		:parameters ()
		:precondition
		(and
			(AT_MIRROR_BANK)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MIRROR_BANK)
			(HAS_ARTHUR_MIRROR)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(not (AT_MIRROR_BANK))
			(not (NOT-HAS_ARTHUR_MIRROR))
		)
	)
	(:action PICKUP_ARTHUR_MIRROR_VALLEY
		:parameters ()
		:precondition
		(and
			(AT_MIRROR_VALLEY)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MIRROR_VALLEY)
			(HAS_ARTHUR_MIRROR)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(not (AT_MIRROR_VALLEY))
			(not (NOT-HAS_ARTHUR_MIRROR))
		)
	)
	(:action PICKUP_ARTHUR_MIRROR_MANSION
		:parameters ()
		:precondition
		(and
			(AT_MIRROR_MANSION)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MIRROR_MANSION)
			(HAS_ARTHUR_MIRROR)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(not (AT_MIRROR_MANSION))
			(not (NOT-HAS_ARTHUR_MIRROR))
		)
	)
	(:action PICKUP_ARTHUR_MIRROR_CLIFF
		:parameters ()
		:precondition
		(and
			(AT_MIRROR_CLIFF)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MIRROR_CLIFF)
			(HAS_ARTHUR_MIRROR)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(not (AT_MIRROR_CLIFF))
			(not (NOT-HAS_ARTHUR_MIRROR))
		)
	)
	(:action PICKUP_ARTHUR_MIRROR_FORGE
		:parameters ()
		:precondition
		(and
			(AT_MIRROR_FORGE)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MIRROR_FORGE)
			(HAS_ARTHUR_MIRROR)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(not (AT_MIRROR_FORGE))
			(not (NOT-HAS_ARTHUR_MIRROR))
		)
	)
	(:action PICKUP_ARTHUR_MIRROR_HUT
		:parameters ()
		:precondition
		(and
			(AT_MIRROR_HUT)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MIRROR_HUT)
			(HAS_ARTHUR_MIRROR)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(not (AT_MIRROR_HUT))
			(not (NOT-HAS_ARTHUR_MIRROR))
		)
	)
	(:action PICKUP_ARTHUR_MIRROR_DOCKS
		:parameters ()
		:precondition
		(and
			(AT_MIRROR_DOCKS)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MIRROR_DOCKS)
			(HAS_ARTHUR_MIRROR)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(not (AT_MIRROR_DOCKS))
			(not (NOT-HAS_ARTHUR_MIRROR))
		)
	)
	(:action PICKUP_ARTHUR_MIRROR_BAR
		:parameters ()
		:precondition
		(and
			(AT_MIRROR_BAR)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MIRROR_BAR)
			(HAS_ARTHUR_MIRROR)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(not (AT_MIRROR_BAR))
			(not (NOT-HAS_ARTHUR_MIRROR))
		)
	)
	(:action PICKUP_ARTHUR_MIRROR_BASEMENT
		:parameters ()
		:precondition
		(and
			(AT_MIRROR_BASEMENT)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MIRROR_BASEMENT)
			(HAS_ARTHUR_MIRROR)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(not (AT_MIRROR_BASEMENT))
			(not (NOT-HAS_ARTHUR_MIRROR))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_BANK
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_BANK)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_BANK)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_BANK))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_VALLEY
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_VALLEY)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_VALLEY)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_VALLEY))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_MANSION
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_MANSION)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_MANSION)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_MANSION))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_CLIFF
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_CLIFF)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_CLIFF)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_CLIFF))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_FORGE
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_FORGE)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_FORGE)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_FORGE))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_HUT
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_HUT)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_HUT)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_HUT))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_DOCKS
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_DOCKS)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_DOCKS)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_DOCKS))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_BAR
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_BAR)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_BAR)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_BAR))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_BASEMENT
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_BASEMENT)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_BASEMENT)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_BASEMENT))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_SHINYKEY_BANK
		:parameters ()
		:precondition
		(and
			(AT_SHINYKEY_BANK)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SHINYKEY_BANK)
			(HAS_ARTHUR_SHINYKEY)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(not (AT_SHINYKEY_BANK))
			(not (NOT-HAS_ARTHUR_SHINYKEY))
		)
	)
	(:action PICKUP_ARTHUR_SHINYKEY_VALLEY
		:parameters ()
		:precondition
		(and
			(AT_SHINYKEY_VALLEY)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SHINYKEY_VALLEY)
			(HAS_ARTHUR_SHINYKEY)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(not (AT_SHINYKEY_VALLEY))
			(not (NOT-HAS_ARTHUR_SHINYKEY))
		)
	)
	(:action PICKUP_ARTHUR_SHINYKEY_MANSION
		:parameters ()
		:precondition
		(and
			(AT_SHINYKEY_MANSION)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SHINYKEY_MANSION)
			(HAS_ARTHUR_SHINYKEY)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(not (AT_SHINYKEY_MANSION))
			(not (NOT-HAS_ARTHUR_SHINYKEY))
		)
	)
	(:action PICKUP_ARTHUR_SHINYKEY_CLIFF
		:parameters ()
		:precondition
		(and
			(AT_SHINYKEY_CLIFF)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SHINYKEY_CLIFF)
			(HAS_ARTHUR_SHINYKEY)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(not (AT_SHINYKEY_CLIFF))
			(not (NOT-HAS_ARTHUR_SHINYKEY))
		)
	)
	(:action PICKUP_ARTHUR_SHINYKEY_FORGE
		:parameters ()
		:precondition
		(and
			(AT_SHINYKEY_FORGE)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SHINYKEY_FORGE)
			(HAS_ARTHUR_SHINYKEY)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(not (AT_SHINYKEY_FORGE))
			(not (NOT-HAS_ARTHUR_SHINYKEY))
		)
	)
	(:action PICKUP_ARTHUR_SHINYKEY_HUT
		:parameters ()
		:precondition
		(and
			(AT_SHINYKEY_HUT)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SHINYKEY_HUT)
			(HAS_ARTHUR_SHINYKEY)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(not (AT_SHINYKEY_HUT))
			(not (NOT-HAS_ARTHUR_SHINYKEY))
		)
	)
	(:action PICKUP_ARTHUR_SHINYKEY_DOCKS
		:parameters ()
		:precondition
		(and
			(AT_SHINYKEY_DOCKS)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SHINYKEY_DOCKS)
			(HAS_ARTHUR_SHINYKEY)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(not (AT_SHINYKEY_DOCKS))
			(not (NOT-HAS_ARTHUR_SHINYKEY))
		)
	)
	(:action PICKUP_ARTHUR_SHINYKEY_BAR
		:parameters ()
		:precondition
		(and
			(AT_SHINYKEY_BAR)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SHINYKEY_BAR)
			(HAS_ARTHUR_SHINYKEY)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(not (AT_SHINYKEY_BAR))
			(not (NOT-HAS_ARTHUR_SHINYKEY))
		)
	)
	(:action PICKUP_ARTHUR_SHINYKEY_BASEMENT
		:parameters ()
		:precondition
		(and
			(AT_SHINYKEY_BASEMENT)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SHINYKEY_BASEMENT)
			(HAS_ARTHUR_SHINYKEY)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(not (AT_SHINYKEY_BASEMENT))
			(not (NOT-HAS_ARTHUR_SHINYKEY))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_FORGE_FORGEEXIT_TOWNARCH
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_FORGE)
			(AT_ARTHUR_TOWNARCH)
			(not (AT_ARTHUR_FORGE))
			(not (NOT-AT_ARTHUR_TOWNARCH))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_BASEMENT_BASEMENTEXIT_BAR
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_BAR)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_BASEMENT)
			(AT_ARTHUR_BAR)
			(not (AT_ARTHUR_BASEMENT))
			(not (NOT-AT_ARTHUR_BAR))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_BAR_BAREXIT_DOCKS
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_DOCKS)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_BAR)
			(AT_ARTHUR_DOCKS)
			(not (AT_ARTHUR_BAR))
			(not (NOT-AT_ARTHUR_DOCKS))
		)
	)
	(:action MOVE-THROUGH-DOORWAY_ARTHUR_JUNKYARD_DOCKS
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_DOCKS)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_JUNKYARD)
			(AT_ARTHUR_DOCKS)
			(not (AT_ARTHUR_JUNKYARD))
			(not (NOT-AT_ARTHUR_DOCKS))
		)
	)
	(:action MOVE-THROUGH-DOORWAY_ARTHUR_DOCKS_TOWNARCH
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_DOCKS)
			(AT_ARTHUR_TOWNARCH)
			(not (AT_ARTHUR_DOCKS))
			(not (NOT-AT_ARTHUR_TOWNARCH))
		)
	)
	(:action MOVE-THROUGH-DOORWAY_ARTHUR_DOCKS_JUNKYARD
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_JUNKYARD)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_DOCKS)
			(AT_ARTHUR_JUNKYARD)
			(not (AT_ARTHUR_DOCKS))
			(not (NOT-AT_ARTHUR_JUNKYARD))
		)
	)
	(:action MOVE-THROUGH-DOORWAY_ARTHUR_BASEMENT_STORAGE
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_STORAGE)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_BASEMENT)
			(AT_ARTHUR_STORAGE)
			(not (AT_ARTHUR_BASEMENT))
			(not (NOT-AT_ARTHUR_STORAGE))
		)
	)
	(:action GIVE_ARTHUR_LOVELETTER_JORDAN_MANSION
		:parameters ()
		:precondition
		(and
			(WANTS-ITEM_JORDAN_LOVELETTER)
			(NOT-HAS_JORDAN_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(HAS_JORDAN_LOVELETTER)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
			(not (WANTS-ITEM_JORDAN_LOVELETTER))
			(not (NOT-HAS_JORDAN_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_BANK
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_BANK)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_BANK))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_VALLEY
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_VALLEY)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_VALLEY))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_MANSION
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_MANSION)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_MANSION))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_CLIFF
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_CLIFF)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_CLIFF))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_FORGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_FORGE)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_FORGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_HUT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_HUT)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_HUT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_DOCKS
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_DOCKS)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_DOCKS))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_BAR
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_BAR)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_BAR))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_BASEMENT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_BASEMENT)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_BASEMENT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_BANK
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_BANK)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_BANK))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_VALLEY
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_VALLEY)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_VALLEY))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_MANSION
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_MANSION)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_MANSION))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_CLIFF
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_CLIFF)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_CLIFF))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_FORGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_FORGE)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_FORGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_HUT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_HUT)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_HUT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_DOCKS
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_DOCKS)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_DOCKS))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_BAR
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_BAR)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_BAR))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_BASEMENT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_BASEMENT)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_BASEMENT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_ROPE_BANK
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(HAS_ARTHUR_ROPE)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ROPE)
			(AT_ROPE_BANK)
			(not (HAS_ARTHUR_ROPE))
			(not (NOT-AT_ROPE_BANK))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ROPE))
		)
	)
	(:action DROP_ARTHUR_ROPE_VALLEY
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(HAS_ARTHUR_ROPE)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ROPE)
			(AT_ROPE_VALLEY)
			(not (HAS_ARTHUR_ROPE))
			(not (NOT-AT_ROPE_VALLEY))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ROPE))
		)
	)
	(:action DROP_ARTHUR_ROPE_MANSION
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(HAS_ARTHUR_ROPE)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ROPE)
			(AT_ROPE_MANSION)
			(not (HAS_ARTHUR_ROPE))
			(not (NOT-AT_ROPE_MANSION))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ROPE))
		)
	)
	(:action DROP_ARTHUR_ROPE_CLIFF
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(HAS_ARTHUR_ROPE)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ROPE)
			(AT_ROPE_CLIFF)
			(not (HAS_ARTHUR_ROPE))
			(not (NOT-AT_ROPE_CLIFF))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ROPE))
		)
	)
	(:action DROP_ARTHUR_ROPE_SHOP
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(HAS_ARTHUR_ROPE)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ROPE)
			(AT_ROPE_SHOP)
			(not (HAS_ARTHUR_ROPE))
			(not (NOT-AT_ROPE_SHOP))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ROPE))
		)
	)
	(:action DROP_ARTHUR_ROPE_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(HAS_ARTHUR_ROPE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ROPE)
			(AT_ROPE_TOWNSQUARE)
			(not (HAS_ARTHUR_ROPE))
			(not (NOT-AT_ROPE_TOWNSQUARE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ROPE))
		)
	)
	(:action DROP_ARTHUR_ROPE_FORGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(HAS_ARTHUR_ROPE)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ROPE)
			(AT_ROPE_FORGE)
			(not (HAS_ARTHUR_ROPE))
			(not (NOT-AT_ROPE_FORGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ROPE))
		)
	)
	(:action DROP_ARTHUR_ROPE_HUT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(HAS_ARTHUR_ROPE)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ROPE)
			(AT_ROPE_HUT)
			(not (HAS_ARTHUR_ROPE))
			(not (NOT-AT_ROPE_HUT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ROPE))
		)
	)
	(:action DROP_ARTHUR_ROPE_TOWNARCH
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(HAS_ARTHUR_ROPE)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ROPE)
			(AT_ROPE_TOWNARCH)
			(not (HAS_ARTHUR_ROPE))
			(not (NOT-AT_ROPE_TOWNARCH))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ROPE))
		)
	)
	(:action DROP_ARTHUR_ROPE_DOCKS
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(HAS_ARTHUR_ROPE)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ROPE)
			(AT_ROPE_DOCKS)
			(not (HAS_ARTHUR_ROPE))
			(not (NOT-AT_ROPE_DOCKS))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ROPE))
		)
	)
	(:action DROP_ARTHUR_ROPE_BAR
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(HAS_ARTHUR_ROPE)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ROPE)
			(AT_ROPE_BAR)
			(not (HAS_ARTHUR_ROPE))
			(not (NOT-AT_ROPE_BAR))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ROPE))
		)
	)
	(:action DROP_ARTHUR_ROPE_BASEMENT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(HAS_ARTHUR_ROPE)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ROPE)
			(AT_ROPE_BASEMENT)
			(not (HAS_ARTHUR_ROPE))
			(not (NOT-AT_ROPE_BASEMENT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ROPE))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSWORD_BANK
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(HAS_ARTHUR_KNIGHTSWORD)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSWORD)
			(AT_KNIGHTSWORD_BANK)
			(not (HAS_ARTHUR_KNIGHTSWORD))
			(not (NOT-AT_KNIGHTSWORD_BANK))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSWORD_VALLEY
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(HAS_ARTHUR_KNIGHTSWORD)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSWORD)
			(AT_KNIGHTSWORD_VALLEY)
			(not (HAS_ARTHUR_KNIGHTSWORD))
			(not (NOT-AT_KNIGHTSWORD_VALLEY))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSWORD_MANSION
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(HAS_ARTHUR_KNIGHTSWORD)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSWORD)
			(AT_KNIGHTSWORD_MANSION)
			(not (HAS_ARTHUR_KNIGHTSWORD))
			(not (NOT-AT_KNIGHTSWORD_MANSION))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSWORD_CLIFF
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(HAS_ARTHUR_KNIGHTSWORD)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSWORD)
			(AT_KNIGHTSWORD_CLIFF)
			(not (HAS_ARTHUR_KNIGHTSWORD))
			(not (NOT-AT_KNIGHTSWORD_CLIFF))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSWORD_FORGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(HAS_ARTHUR_KNIGHTSWORD)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSWORD)
			(AT_KNIGHTSWORD_FORGE)
			(not (HAS_ARTHUR_KNIGHTSWORD))
			(not (NOT-AT_KNIGHTSWORD_FORGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSWORD_HUT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(HAS_ARTHUR_KNIGHTSWORD)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSWORD)
			(AT_KNIGHTSWORD_HUT)
			(not (HAS_ARTHUR_KNIGHTSWORD))
			(not (NOT-AT_KNIGHTSWORD_HUT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSWORD_DOCKS
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(HAS_ARTHUR_KNIGHTSWORD)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSWORD)
			(AT_KNIGHTSWORD_DOCKS)
			(not (HAS_ARTHUR_KNIGHTSWORD))
			(not (NOT-AT_KNIGHTSWORD_DOCKS))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSWORD_BAR
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(HAS_ARTHUR_KNIGHTSWORD)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSWORD)
			(AT_KNIGHTSWORD_BAR)
			(not (HAS_ARTHUR_KNIGHTSWORD))
			(not (NOT-AT_KNIGHTSWORD_BAR))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSWORD_BASEMENT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(HAS_ARTHUR_KNIGHTSWORD)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSWORD)
			(AT_KNIGHTSWORD_BASEMENT)
			(not (HAS_ARTHUR_KNIGHTSWORD))
			(not (NOT-AT_KNIGHTSWORD_BASEMENT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action DROP_ARTHUR_BOOK_BANK
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(HAS_ARTHUR_BOOK)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BOOK)
			(AT_BOOK_BANK)
			(not (HAS_ARTHUR_BOOK))
			(not (NOT-AT_BOOK_BANK))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BOOK))
		)
	)
	(:action DROP_ARTHUR_BOOK_VALLEY
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(HAS_ARTHUR_BOOK)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BOOK)
			(AT_BOOK_VALLEY)
			(not (HAS_ARTHUR_BOOK))
			(not (NOT-AT_BOOK_VALLEY))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BOOK))
		)
	)
	(:action DROP_ARTHUR_BOOK_MANSION
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(HAS_ARTHUR_BOOK)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BOOK)
			(AT_BOOK_MANSION)
			(not (HAS_ARTHUR_BOOK))
			(not (NOT-AT_BOOK_MANSION))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BOOK))
		)
	)
	(:action DROP_ARTHUR_BOOK_CLIFF
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(HAS_ARTHUR_BOOK)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BOOK)
			(AT_BOOK_CLIFF)
			(not (HAS_ARTHUR_BOOK))
			(not (NOT-AT_BOOK_CLIFF))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BOOK))
		)
	)
	(:action DROP_ARTHUR_BOOK_SHOP
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(HAS_ARTHUR_BOOK)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BOOK)
			(AT_BOOK_SHOP)
			(not (HAS_ARTHUR_BOOK))
			(not (NOT-AT_BOOK_SHOP))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BOOK))
		)
	)
	(:action DROP_ARTHUR_BOOK_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(HAS_ARTHUR_BOOK)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BOOK)
			(AT_BOOK_TOWNSQUARE)
			(not (HAS_ARTHUR_BOOK))
			(not (NOT-AT_BOOK_TOWNSQUARE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BOOK))
		)
	)
	(:action DROP_ARTHUR_BOOK_FORGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(HAS_ARTHUR_BOOK)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BOOK)
			(AT_BOOK_FORGE)
			(not (HAS_ARTHUR_BOOK))
			(not (NOT-AT_BOOK_FORGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BOOK))
		)
	)
	(:action DROP_ARTHUR_BOOK_HUT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(HAS_ARTHUR_BOOK)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BOOK)
			(AT_BOOK_HUT)
			(not (HAS_ARTHUR_BOOK))
			(not (NOT-AT_BOOK_HUT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BOOK))
		)
	)
	(:action DROP_ARTHUR_BOOK_TOWNARCH
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(HAS_ARTHUR_BOOK)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BOOK)
			(AT_BOOK_TOWNARCH)
			(not (HAS_ARTHUR_BOOK))
			(not (NOT-AT_BOOK_TOWNARCH))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BOOK))
		)
	)
	(:action DROP_ARTHUR_BOOK_DOCKS
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(HAS_ARTHUR_BOOK)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BOOK)
			(AT_BOOK_DOCKS)
			(not (HAS_ARTHUR_BOOK))
			(not (NOT-AT_BOOK_DOCKS))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BOOK))
		)
	)
	(:action DROP_ARTHUR_BOOK_BAR
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(HAS_ARTHUR_BOOK)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BOOK)
			(AT_BOOK_BAR)
			(not (HAS_ARTHUR_BOOK))
			(not (NOT-AT_BOOK_BAR))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BOOK))
		)
	)
	(:action DROP_ARTHUR_BOOK_BASEMENT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(HAS_ARTHUR_BOOK)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BOOK)
			(AT_BOOK_BASEMENT)
			(not (HAS_ARTHUR_BOOK))
			(not (NOT-AT_BOOK_BASEMENT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BOOK))
		)
	)
	(:action DROP_ARTHUR_HAIRTONIC_BANK
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(HAS_ARTHUR_HAIRTONIC)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_HAIRTONIC)
			(AT_HAIRTONIC_BANK)
			(not (HAS_ARTHUR_HAIRTONIC))
			(not (NOT-AT_HAIRTONIC_BANK))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC))
		)
	)
	(:action DROP_ARTHUR_HAIRTONIC_VALLEY
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(HAS_ARTHUR_HAIRTONIC)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_HAIRTONIC)
			(AT_HAIRTONIC_VALLEY)
			(not (HAS_ARTHUR_HAIRTONIC))
			(not (NOT-AT_HAIRTONIC_VALLEY))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC))
		)
	)
	(:action DROP_ARTHUR_HAIRTONIC_MANSION
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(HAS_ARTHUR_HAIRTONIC)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_HAIRTONIC)
			(AT_HAIRTONIC_MANSION)
			(not (HAS_ARTHUR_HAIRTONIC))
			(not (NOT-AT_HAIRTONIC_MANSION))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC))
		)
	)
	(:action DROP_ARTHUR_HAIRTONIC_CLIFF
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(HAS_ARTHUR_HAIRTONIC)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_HAIRTONIC)
			(AT_HAIRTONIC_CLIFF)
			(not (HAS_ARTHUR_HAIRTONIC))
			(not (NOT-AT_HAIRTONIC_CLIFF))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC))
		)
	)
	(:action DROP_ARTHUR_HAIRTONIC_FORGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(HAS_ARTHUR_HAIRTONIC)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_HAIRTONIC)
			(AT_HAIRTONIC_FORGE)
			(not (HAS_ARTHUR_HAIRTONIC))
			(not (NOT-AT_HAIRTONIC_FORGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC))
		)
	)
	(:action DROP_ARTHUR_HAIRTONIC_HUT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(HAS_ARTHUR_HAIRTONIC)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_HAIRTONIC)
			(AT_HAIRTONIC_HUT)
			(not (HAS_ARTHUR_HAIRTONIC))
			(not (NOT-AT_HAIRTONIC_HUT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC))
		)
	)
	(:action DROP_ARTHUR_HAIRTONIC_DOCKS
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(HAS_ARTHUR_HAIRTONIC)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_HAIRTONIC)
			(AT_HAIRTONIC_DOCKS)
			(not (HAS_ARTHUR_HAIRTONIC))
			(not (NOT-AT_HAIRTONIC_DOCKS))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC))
		)
	)
	(:action DROP_ARTHUR_HAIRTONIC_BAR
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(HAS_ARTHUR_HAIRTONIC)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_HAIRTONIC)
			(AT_HAIRTONIC_BAR)
			(not (HAS_ARTHUR_HAIRTONIC))
			(not (NOT-AT_HAIRTONIC_BAR))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC))
		)
	)
	(:action DROP_ARTHUR_HAIRTONIC_BASEMENT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(HAS_ARTHUR_HAIRTONIC)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_HAIRTONIC)
			(AT_HAIRTONIC_BASEMENT)
			(not (HAS_ARTHUR_HAIRTONIC))
			(not (NOT-AT_HAIRTONIC_BASEMENT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_BANK
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_BANK)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_BANK))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_VALLEY
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_VALLEY)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_VALLEY))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_MANSION
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_MANSION)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_MANSION))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_CLIFF
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_CLIFF)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_CLIFF))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_FORGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_FORGE)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_FORGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_HUT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_HUT)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_HUT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_DOCKS
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_DOCKS)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_DOCKS))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_BAR
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_BAR)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_BAR))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_BASEMENT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_BASEMENT)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_BASEMENT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_ASH_BANK
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(HAS_ARTHUR_ASH)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ASH)
			(AT_ASH_BANK)
			(not (HAS_ARTHUR_ASH))
			(not (NOT-AT_ASH_BANK))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ASH))
		)
	)
	(:action DROP_ARTHUR_ASH_VALLEY
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(HAS_ARTHUR_ASH)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ASH)
			(AT_ASH_VALLEY)
			(not (HAS_ARTHUR_ASH))
			(not (NOT-AT_ASH_VALLEY))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ASH))
		)
	)
	(:action DROP_ARTHUR_ASH_MANSION
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(HAS_ARTHUR_ASH)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ASH)
			(AT_ASH_MANSION)
			(not (HAS_ARTHUR_ASH))
			(not (NOT-AT_ASH_MANSION))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ASH))
		)
	)
	(:action DROP_ARTHUR_ASH_CLIFF
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(HAS_ARTHUR_ASH)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ASH)
			(AT_ASH_CLIFF)
			(not (HAS_ARTHUR_ASH))
			(not (NOT-AT_ASH_CLIFF))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ASH))
		)
	)
	(:action DROP_ARTHUR_ASH_FORGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(HAS_ARTHUR_ASH)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ASH)
			(AT_ASH_FORGE)
			(not (HAS_ARTHUR_ASH))
			(not (NOT-AT_ASH_FORGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ASH))
		)
	)
	(:action DROP_ARTHUR_ASH_HUT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(HAS_ARTHUR_ASH)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ASH)
			(AT_ASH_HUT)
			(not (HAS_ARTHUR_ASH))
			(not (NOT-AT_ASH_HUT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ASH))
		)
	)
	(:action DROP_ARTHUR_ASH_DOCKS
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(HAS_ARTHUR_ASH)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ASH)
			(AT_ASH_DOCKS)
			(not (HAS_ARTHUR_ASH))
			(not (NOT-AT_ASH_DOCKS))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ASH))
		)
	)
	(:action DROP_ARTHUR_ASH_BAR
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(HAS_ARTHUR_ASH)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ASH)
			(AT_ASH_BAR)
			(not (HAS_ARTHUR_ASH))
			(not (NOT-AT_ASH_BAR))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ASH))
		)
	)
	(:action DROP_ARTHUR_ASH_BASEMENT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(HAS_ARTHUR_ASH)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ASH)
			(AT_ASH_BASEMENT)
			(not (HAS_ARTHUR_ASH))
			(not (NOT-AT_ASH_BASEMENT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ASH))
		)
	)
	(:action DROP_ARTHUR_MIRROR_BANK
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(HAS_ARTHUR_MIRROR)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MIRROR)
			(AT_MIRROR_BANK)
			(not (HAS_ARTHUR_MIRROR))
			(not (NOT-AT_MIRROR_BANK))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR))
		)
	)
	(:action DROP_ARTHUR_MIRROR_VALLEY
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(HAS_ARTHUR_MIRROR)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MIRROR)
			(AT_MIRROR_VALLEY)
			(not (HAS_ARTHUR_MIRROR))
			(not (NOT-AT_MIRROR_VALLEY))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR))
		)
	)
	(:action DROP_ARTHUR_MIRROR_MANSION
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(HAS_ARTHUR_MIRROR)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MIRROR)
			(AT_MIRROR_MANSION)
			(not (HAS_ARTHUR_MIRROR))
			(not (NOT-AT_MIRROR_MANSION))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR))
		)
	)
	(:action DROP_ARTHUR_MIRROR_CLIFF
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(HAS_ARTHUR_MIRROR)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MIRROR)
			(AT_MIRROR_CLIFF)
			(not (HAS_ARTHUR_MIRROR))
			(not (NOT-AT_MIRROR_CLIFF))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR))
		)
	)
	(:action DROP_ARTHUR_MIRROR_FORGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(HAS_ARTHUR_MIRROR)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MIRROR)
			(AT_MIRROR_FORGE)
			(not (HAS_ARTHUR_MIRROR))
			(not (NOT-AT_MIRROR_FORGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR))
		)
	)
	(:action DROP_ARTHUR_MIRROR_HUT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(HAS_ARTHUR_MIRROR)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MIRROR)
			(AT_MIRROR_HUT)
			(not (HAS_ARTHUR_MIRROR))
			(not (NOT-AT_MIRROR_HUT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR))
		)
	)
	(:action DROP_ARTHUR_MIRROR_DOCKS
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(HAS_ARTHUR_MIRROR)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MIRROR)
			(AT_MIRROR_DOCKS)
			(not (HAS_ARTHUR_MIRROR))
			(not (NOT-AT_MIRROR_DOCKS))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR))
		)
	)
	(:action DROP_ARTHUR_MIRROR_BAR
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(HAS_ARTHUR_MIRROR)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MIRROR)
			(AT_MIRROR_BAR)
			(not (HAS_ARTHUR_MIRROR))
			(not (NOT-AT_MIRROR_BAR))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR))
		)
	)
	(:action DROP_ARTHUR_MIRROR_BASEMENT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(HAS_ARTHUR_MIRROR)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MIRROR)
			(AT_MIRROR_BASEMENT)
			(not (HAS_ARTHUR_MIRROR))
			(not (NOT-AT_MIRROR_BASEMENT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_BANK
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_BANK)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_BANK))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_VALLEY
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_VALLEY)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_VALLEY))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_MANSION
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_MANSION)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_MANSION))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_CLIFF
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_CLIFF)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_CLIFF))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_FORGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_FORGE)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_FORGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_HUT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_HUT)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_HUT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_DOCKS
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_DOCKS)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_DOCKS))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_BAR
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_BAR)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_BAR))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_BASEMENT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_BASEMENT)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_BASEMENT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_SHINYKEY_BANK
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(HAS_ARTHUR_SHINYKEY)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SHINYKEY)
			(AT_SHINYKEY_BANK)
			(not (HAS_ARTHUR_SHINYKEY))
			(not (NOT-AT_SHINYKEY_BANK))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY))
		)
	)
	(:action DROP_ARTHUR_SHINYKEY_VALLEY
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(HAS_ARTHUR_SHINYKEY)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SHINYKEY)
			(AT_SHINYKEY_VALLEY)
			(not (HAS_ARTHUR_SHINYKEY))
			(not (NOT-AT_SHINYKEY_VALLEY))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY))
		)
	)
	(:action DROP_ARTHUR_SHINYKEY_MANSION
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(HAS_ARTHUR_SHINYKEY)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SHINYKEY)
			(AT_SHINYKEY_MANSION)
			(not (HAS_ARTHUR_SHINYKEY))
			(not (NOT-AT_SHINYKEY_MANSION))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY))
		)
	)
	(:action DROP_ARTHUR_SHINYKEY_CLIFF
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(HAS_ARTHUR_SHINYKEY)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SHINYKEY)
			(AT_SHINYKEY_CLIFF)
			(not (HAS_ARTHUR_SHINYKEY))
			(not (NOT-AT_SHINYKEY_CLIFF))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY))
		)
	)
	(:action DROP_ARTHUR_SHINYKEY_FORGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(HAS_ARTHUR_SHINYKEY)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SHINYKEY)
			(AT_SHINYKEY_FORGE)
			(not (HAS_ARTHUR_SHINYKEY))
			(not (NOT-AT_SHINYKEY_FORGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY))
		)
	)
	(:action DROP_ARTHUR_SHINYKEY_HUT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(HAS_ARTHUR_SHINYKEY)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SHINYKEY)
			(AT_SHINYKEY_HUT)
			(not (HAS_ARTHUR_SHINYKEY))
			(not (NOT-AT_SHINYKEY_HUT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY))
		)
	)
	(:action DROP_ARTHUR_SHINYKEY_DOCKS
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(HAS_ARTHUR_SHINYKEY)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SHINYKEY)
			(AT_SHINYKEY_DOCKS)
			(not (HAS_ARTHUR_SHINYKEY))
			(not (NOT-AT_SHINYKEY_DOCKS))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY))
		)
	)
	(:action DROP_ARTHUR_SHINYKEY_BAR
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(HAS_ARTHUR_SHINYKEY)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SHINYKEY)
			(AT_SHINYKEY_BAR)
			(not (HAS_ARTHUR_SHINYKEY))
			(not (NOT-AT_SHINYKEY_BAR))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY))
		)
	)
	(:action DROP_ARTHUR_SHINYKEY_BASEMENT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(HAS_ARTHUR_SHINYKEY)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SHINYKEY)
			(AT_SHINYKEY_BASEMENT)
			(not (HAS_ARTHUR_SHINYKEY))
			(not (NOT-AT_SHINYKEY_BASEMENT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_TOWNSQUARE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_TOWNSQUARE)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_TOWNSQUARE))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_TOWNARCH
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_TOWNARCH)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_TOWNARCH)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_TOWNARCH))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_TOWNSQUARE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_TOWNSQUARE)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_TOWNSQUARE))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_TOWNARCH
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_TOWNARCH)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_TOWNARCH)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_TOWNARCH))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_ROPE_FORGE
		:parameters ()
		:precondition
		(and
			(AT_ROPE_FORGE)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ROPE_FORGE)
			(HAS_ARTHUR_ROPE)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ROPE)
			(not (AT_ROPE_FORGE))
			(not (NOT-HAS_ARTHUR_ROPE))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSWORD_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSWORD_TOWNSQUARE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSWORD_TOWNSQUARE)
			(HAS_ARTHUR_KNIGHTSWORD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(not (AT_KNIGHTSWORD_TOWNSQUARE))
			(not (NOT-HAS_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSWORD_TOWNARCH
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSWORD_TOWNARCH)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSWORD_TOWNARCH)
			(HAS_ARTHUR_KNIGHTSWORD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(not (AT_KNIGHTSWORD_TOWNARCH))
			(not (NOT-HAS_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action PICKUP_ARTHUR_BOOK_HUT
		:parameters ()
		:precondition
		(and
			(AT_BOOK_HUT)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BOOK_HUT)
			(HAS_ARTHUR_BOOK)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BOOK)
			(not (AT_BOOK_HUT))
			(not (NOT-HAS_ARTHUR_BOOK))
		)
	)
	(:action PICKUP_ARTHUR_HAIRTONIC_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(AT_HAIRTONIC_TOWNSQUARE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_HAIRTONIC_TOWNSQUARE)
			(HAS_ARTHUR_HAIRTONIC)
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(not (AT_HAIRTONIC_TOWNSQUARE))
			(not (NOT-HAS_ARTHUR_HAIRTONIC))
		)
	)
	(:action PICKUP_ARTHUR_HAIRTONIC_TOWNARCH
		:parameters ()
		:precondition
		(and
			(AT_HAIRTONIC_TOWNARCH)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_HAIRTONIC_TOWNARCH)
			(HAS_ARTHUR_HAIRTONIC)
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(not (AT_HAIRTONIC_TOWNARCH))
			(not (NOT-HAS_ARTHUR_HAIRTONIC))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_TOWNSQUARE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_TOWNSQUARE)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_TOWNSQUARE))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_TOWNARCH
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_TOWNARCH)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_TOWNARCH)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_TOWNARCH))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_ASH_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(AT_ASH_TOWNSQUARE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ASH_TOWNSQUARE)
			(HAS_ARTHUR_ASH)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(not (AT_ASH_TOWNSQUARE))
			(not (NOT-HAS_ARTHUR_ASH))
		)
	)
	(:action PICKUP_ARTHUR_ASH_TOWNARCH
		:parameters ()
		:precondition
		(and
			(AT_ASH_TOWNARCH)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ASH_TOWNARCH)
			(HAS_ARTHUR_ASH)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(not (AT_ASH_TOWNARCH))
			(not (NOT-HAS_ARTHUR_ASH))
		)
	)
	(:action PICKUP_ARTHUR_MIRROR_SHOP
		:parameters ()
		:precondition
		(and
			(AT_MIRROR_SHOP)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MIRROR_SHOP)
			(HAS_ARTHUR_MIRROR)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(not (AT_MIRROR_SHOP))
			(not (NOT-HAS_ARTHUR_MIRROR))
		)
	)
	(:action PICKUP_ARTHUR_MIRROR_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(AT_MIRROR_TOWNSQUARE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MIRROR_TOWNSQUARE)
			(HAS_ARTHUR_MIRROR)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(not (AT_MIRROR_TOWNSQUARE))
			(not (NOT-HAS_ARTHUR_MIRROR))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_SHOP
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_SHOP)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_SHOP)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_SHOP))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_TOWNSQUARE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_TOWNSQUARE)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_TOWNSQUARE))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_SHINYKEY_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(AT_SHINYKEY_TOWNSQUARE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SHINYKEY_TOWNSQUARE)
			(HAS_ARTHUR_SHINYKEY)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(not (AT_SHINYKEY_TOWNSQUARE))
			(not (NOT-HAS_ARTHUR_SHINYKEY))
		)
	)
	(:action PICKUP_ARTHUR_SHINYKEY_TOWNARCH
		:parameters ()
		:precondition
		(and
			(AT_SHINYKEY_TOWNARCH)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SHINYKEY_TOWNARCH)
			(HAS_ARTHUR_SHINYKEY)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(not (AT_SHINYKEY_TOWNARCH))
			(not (NOT-HAS_ARTHUR_SHINYKEY))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_BAR_BASEMENTENTRANCE_BASEMENT
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_BASEMENT)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_BAR)
			(AT_ARTHUR_BASEMENT)
			(not (AT_ARTHUR_BAR))
			(not (NOT-AT_ARTHUR_BASEMENT))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNARCH_FORGEENTRANCE_FORGE
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_FORGE)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_FORGE)
			(not (AT_ARTHUR_TOWNARCH))
			(not (NOT-AT_ARTHUR_FORGE))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_CLIFF_MANSIONENTRANCE_MANSION
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_MANSION)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_CLIFF)
			(AT_ARTHUR_MANSION)
			(not (AT_ARTHUR_CLIFF))
			(not (NOT-AT_ARTHUR_MANSION))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_DOCKS_BARENTRANCE_BAR
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_BAR)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_DOCKS)
			(AT_ARTHUR_BAR)
			(not (AT_ARTHUR_DOCKS))
			(not (NOT-AT_ARTHUR_BAR))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_BANKENTRANCE_BANK
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_BANKENTRANCE)
			(NOT-AT_ARTHUR_BANK)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_BANK)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_BANK))
		)
	)
	(:action OPEN_ARTHUR_BANKENTRANCE_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-LOCKED_BANKENTRANCE)
			(CLOSED_BANKENTRANCE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-CLOSED_BANKENTRANCE)
			(not (CLOSED_BANKENTRANCE))
		)
	)
	(:action UNLOCK-ENTRANCE_ARTHUR_SHINYKEY_BANKENTRANCE_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(AT_ARTHUR_TOWNSQUARE)
			(HAS_ARTHUR_SHINYKEY)
			(LOCKED_BANKENTRANCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-LOCKED_BANKENTRANCE)
			(NOT-HAS_ARTHUR_SHINYKEY)
			(not (LOCKED_BANKENTRANCE))
			(not (HAS_ARTHUR_SHINYKEY))
		)
	)
	(:action MOVE-THROUGH-DOORWAY_ARTHUR_CLIFF_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_CLIFF)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_CLIFF))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action MOVE-THROUGH-DOORWAY_ARTHUR_TOWNSQUARE_VALLEY
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_VALLEY)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_VALLEY)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_VALLEY))
		)
	)
	(:action MOVE-THROUGH-DOORWAY_ARTHUR_TOWNSQUARE_CLIFF
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_CLIFF)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_CLIFF)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_CLIFF))
		)
	)
	(:action MOVE-THROUGH-DOORWAY_ARTHUR_TOWNARCH_DOCKS
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_DOCKS)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_DOCKS)
			(not (AT_ARTHUR_TOWNARCH))
			(not (NOT-AT_ARTHUR_DOCKS))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_TOWNSQUARE)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_TOWNSQUARE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_TOWNARCH
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_TOWNARCH)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_TOWNARCH))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_TOWNSQUARE)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_TOWNSQUARE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_TOWNARCH
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_TOWNARCH)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_TOWNARCH))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSWORD_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(HAS_ARTHUR_KNIGHTSWORD)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSWORD)
			(AT_KNIGHTSWORD_TOWNSQUARE)
			(not (HAS_ARTHUR_KNIGHTSWORD))
			(not (NOT-AT_KNIGHTSWORD_TOWNSQUARE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSWORD_TOWNARCH
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(HAS_ARTHUR_KNIGHTSWORD)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSWORD)
			(AT_KNIGHTSWORD_TOWNARCH)
			(not (HAS_ARTHUR_KNIGHTSWORD))
			(not (NOT-AT_KNIGHTSWORD_TOWNARCH))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action DROP_ARTHUR_HAIRTONIC_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(HAS_ARTHUR_HAIRTONIC)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_HAIRTONIC)
			(AT_HAIRTONIC_TOWNSQUARE)
			(not (HAS_ARTHUR_HAIRTONIC))
			(not (NOT-AT_HAIRTONIC_TOWNSQUARE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC))
		)
	)
	(:action DROP_ARTHUR_HAIRTONIC_TOWNARCH
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(HAS_ARTHUR_HAIRTONIC)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_HAIRTONIC)
			(AT_HAIRTONIC_TOWNARCH)
			(not (HAS_ARTHUR_HAIRTONIC))
			(not (NOT-AT_HAIRTONIC_TOWNARCH))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_TOWNSQUARE)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_TOWNSQUARE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_TOWNARCH
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_TOWNARCH)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_TOWNARCH))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_ASH_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(HAS_ARTHUR_ASH)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ASH)
			(AT_ASH_TOWNSQUARE)
			(not (HAS_ARTHUR_ASH))
			(not (NOT-AT_ASH_TOWNSQUARE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ASH))
		)
	)
	(:action DROP_ARTHUR_ASH_TOWNARCH
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(HAS_ARTHUR_ASH)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ASH)
			(AT_ASH_TOWNARCH)
			(not (HAS_ARTHUR_ASH))
			(not (NOT-AT_ASH_TOWNARCH))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ASH))
		)
	)
	(:action DROP_ARTHUR_MIRROR_SHOP
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(HAS_ARTHUR_MIRROR)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MIRROR)
			(AT_MIRROR_SHOP)
			(not (HAS_ARTHUR_MIRROR))
			(not (NOT-AT_MIRROR_SHOP))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR))
		)
	)
	(:action DROP_ARTHUR_MIRROR_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(HAS_ARTHUR_MIRROR)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MIRROR)
			(AT_MIRROR_TOWNSQUARE)
			(not (HAS_ARTHUR_MIRROR))
			(not (NOT-AT_MIRROR_TOWNSQUARE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR))
		)
	)
	(:action DROP_ARTHUR_MIRROR_TOWNARCH
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(HAS_ARTHUR_MIRROR)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MIRROR)
			(AT_MIRROR_TOWNARCH)
			(not (HAS_ARTHUR_MIRROR))
			(not (NOT-AT_MIRROR_TOWNARCH))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_SHOP
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_SHOP)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_SHOP))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_TOWNSQUARE)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_TOWNSQUARE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_TOWNARCH
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_TOWNARCH)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_TOWNARCH))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_SHINYKEY_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(HAS_ARTHUR_SHINYKEY)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SHINYKEY)
			(AT_SHINYKEY_TOWNSQUARE)
			(not (HAS_ARTHUR_SHINYKEY))
			(not (NOT-AT_SHINYKEY_TOWNSQUARE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY))
		)
	)
	(:action DROP_ARTHUR_SHINYKEY_TOWNARCH
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(HAS_ARTHUR_SHINYKEY)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SHINYKEY)
			(AT_SHINYKEY_TOWNARCH)
			(not (HAS_ARTHUR_SHINYKEY))
			(not (NOT-AT_SHINYKEY_TOWNARCH))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSWORD_SHOP
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSWORD_SHOP)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSWORD_SHOP)
			(HAS_ARTHUR_KNIGHTSWORD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(not (AT_KNIGHTSWORD_SHOP))
			(not (NOT-HAS_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action PICKUP_ARTHUR_HAIRTONIC_SHOP
		:parameters ()
		:precondition
		(and
			(AT_HAIRTONIC_SHOP)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_HAIRTONIC_SHOP)
			(HAS_ARTHUR_HAIRTONIC)
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(not (AT_HAIRTONIC_SHOP))
			(not (NOT-HAS_ARTHUR_HAIRTONIC))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_SHOP
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_SHOP)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_SHOP)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_SHOP))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_ASH_SHOP
		:parameters ()
		:precondition
		(and
			(AT_ASH_SHOP)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ASH_SHOP)
			(HAS_ARTHUR_ASH)
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(not (AT_ASH_SHOP))
			(not (NOT-HAS_ARTHUR_ASH))
		)
	)
	(:action PICKUP_ARTHUR_MIRROR_TOWNARCH
		:parameters ()
		:precondition
		(and
			(AT_MIRROR_TOWNARCH)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MIRROR_TOWNARCH)
			(HAS_ARTHUR_MIRROR)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MIRROR)
			(not (AT_MIRROR_TOWNARCH))
			(not (NOT-HAS_ARTHUR_MIRROR))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_TOWNARCH
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_TOWNARCH)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_TOWNARCH)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_TOWNARCH))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_SHINYKEY_SHOP
		:parameters ()
		:precondition
		(and
			(AT_SHINYKEY_SHOP)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SHINYKEY_SHOP)
			(HAS_ARTHUR_SHINYKEY)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(not (AT_SHINYKEY_SHOP))
			(not (NOT-HAS_ARTHUR_SHINYKEY))
		)
	)
	(:action GIVE_ARTHUR_HAIRTONIC_GIOVANNA_SHOP
		:parameters ()
		:precondition
		(and
			(WANTS-ITEM_GIOVANNA_HAIRTONIC)
			(NOT-HAS_GIOVANNA_HAIRTONIC)
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(HAS_ARTHUR_HAIRTONIC)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_HAIRTONIC)
			(HAS_GIOVANNA_HAIRTONIC)
			(not (HAS_ARTHUR_HAIRTONIC))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC))
			(not (WANTS-ITEM_GIOVANNA_HAIRTONIC))
			(not (NOT-HAS_GIOVANNA_HAIRTONIC))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_SHOP
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_SHOP)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_SHOP))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_SHOP
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_SHOP)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_SHOP))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSWORD_SHOP
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD)
			(HAS_ARTHUR_KNIGHTSWORD)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSWORD)
			(AT_KNIGHTSWORD_SHOP)
			(not (HAS_ARTHUR_KNIGHTSWORD))
			(not (NOT-AT_KNIGHTSWORD_SHOP))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSWORD))
		)
	)
	(:action DROP_ARTHUR_HAIRTONIC_SHOP
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC)
			(HAS_ARTHUR_HAIRTONIC)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_HAIRTONIC)
			(AT_HAIRTONIC_SHOP)
			(not (HAS_ARTHUR_HAIRTONIC))
			(not (NOT-AT_HAIRTONIC_SHOP))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_HAIRTONIC))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_SHOP
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_SHOP)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_SHOP))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_ASH_SHOP
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_ASH)
			(HAS_ARTHUR_ASH)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_ASH)
			(AT_ASH_SHOP)
			(not (HAS_ARTHUR_ASH))
			(not (NOT-AT_ASH_SHOP))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_ASH))
		)
	)
	(:action DROP_ARTHUR_SHINYKEY_SHOP
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY)
			(HAS_ARTHUR_SHINYKEY)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SHINYKEY)
			(AT_SHINYKEY_SHOP)
			(not (HAS_ARTHUR_SHINYKEY))
			(not (NOT-AT_SHINYKEY_SHOP))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SHINYKEY))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_SHOP
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_SHOP)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_SHOP)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_SHOP))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_SHOP
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_SHOP)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_SHOP)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_SHOP))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)

)
