(define
	(domain grounded-ARTHUR_HYRULE)
	(:requirements :strips :action-costs)
	(:predicates
		(NOT-HAS_ARTHUR_MUSHROOM)
		(AT_MUSHROOM_SHOP)
		(NOT-HAS_ARTHUR_LOVELETTER)
		(AT_LOVELETTER_SHOP)
		(NOT-HAS_ARTHUR_KNIGHTSHIELD)
		(AT_KNIGHTSHIELD_SHOP)
		(NOT-HAS_ARTHUR_RUBYRING)
		(AT_RUBYRING_SHOP)
		(NOT-HAS_ARTHUR_COIN)
		(AT_COIN_SHOP)
		(NOT-HAS_ARTHUR_SILVER)
		(AT_SILVER_SHOP)
		(NOT-AT_ARTHUR_SHOP)
		(AT_ARTHUR_TOWNSQUARE)
		(CLOSED_SHOPENTRANCE)
		(CLOSED_BANKENTRANCE)
		(CLOSED_SHOPEXIT)
		(AT_MUSHROOM_TOWNSQUARE)
		(AT_LOVELETTER_TOWNSQUARE)
		(AT_KNIGHTSHIELD_TOWNSQUARE)
		(AT_RUBYRING_TOWNSQUARE)
		(AT_COIN_TOWNSQUARE)
		(AT_SILVER_TOWNSQUARE)
		(AT_ARTHUR_TOWNARCH)
		(AT_ARTHUR_VALLEY)
		(AT_ARTHUR_CLIFF)
		(NOT-CLOSED_HUTENTRANCE)
		(NOT-CLOSED_FORGEENTRANCE)
		(AT_ARTHUR_FORT)
		(AT_ARTHUR_HUT)
		(AT_ARTHUR_MANSION)
		(AT_ARTHUR_BANK)
		(AT_ARTHUR_FORGE)
		(CLOSED_FORTENTRANCE)
		(CLOSED_FORTEXIT)
		(CLOSED_BANKEXIT)
		(CLOSED_MANSIONENTRANCE)
		(NOT-AT_BUCKET_FORT)
		(HAS_ARTHUR_BUCKET)
		(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
		(AT_MUSHROOM_TOWNARCH)
		(AT_MUSHROOM_VALLEY)
		(AT_MUSHROOM_FORT)
		(AT_MUSHROOM_BANK)
		(AT_MUSHROOM_CLIFF)
		(AT_MUSHROOM_MANSION)
		(AT_MUSHROOM_FORGE)
		(AT_MUSHROOM_HUT)
		(AT_LOVELETTER_TOWNARCH)
		(AT_LOVELETTER_VALLEY)
		(AT_LOVELETTER_FORT)
		(AT_LOVELETTER_BANK)
		(AT_LOVELETTER_CLIFF)
		(AT_LOVELETTER_MANSION)
		(AT_LOVELETTER_FORGE)
		(AT_LOVELETTER_HUT)
		(AT_BUCKET_TOWNARCH)
		(AT_BUCKET_TOWNSQUARE)
		(AT_BUCKET_VALLEY)
		(AT_BUCKET_SHOP)
		(AT_BUCKET_BANK)
		(AT_BUCKET_CLIFF)
		(AT_BUCKET_MANSION)
		(AT_BUCKET_FORGE)
		(AT_BUCKET_HUT)
		(AT_KNIGHTSHIELD_TOWNARCH)
		(AT_KNIGHTSHIELD_VALLEY)
		(AT_KNIGHTSHIELD_FORT)
		(AT_KNIGHTSHIELD_BANK)
		(AT_KNIGHTSHIELD_CLIFF)
		(AT_KNIGHTSHIELD_MANSION)
		(AT_KNIGHTSHIELD_FORGE)
		(AT_KNIGHTSHIELD_HUT)
		(AT_RUBYRING_TOWNARCH)
		(AT_RUBYRING_VALLEY)
		(AT_RUBYRING_FORT)
		(AT_RUBYRING_BANK)
		(AT_RUBYRING_CLIFF)
		(AT_RUBYRING_MANSION)
		(AT_RUBYRING_FORGE)
		(AT_RUBYRING_HUT)
		(AT_COIN_TOWNARCH)
		(AT_COIN_VALLEY)
		(AT_COIN_FORT)
		(AT_COIN_BANK)
		(AT_COIN_CLIFF)
		(AT_COIN_MANSION)
		(AT_COIN_FORGE)
		(AT_COIN_HUT)
		(AT_SILVER_TOWNARCH)
		(AT_SILVER_VALLEY)
		(AT_SILVER_FORT)
		(AT_SILVER_BANK)
		(AT_SILVER_CLIFF)
		(AT_SILVER_MANSION)
		(AT_SILVER_FORGE)
		(AT_SILVER_HUT)
		(HAS_JORDAN_LOVELETTER)
		(AT_ARTHUR_DOCKS)
		(AT_ARTHUR_BAR)
		(CLOSED_BASEMENTENTRANCE)
		(CLOSED_BAREXIT)
		(CLOSED_BARENTRANCE)
		(AT_MUSHROOM_BAR)
		(AT_MUSHROOM_DOCKS)
		(AT_LOVELETTER_BAR)
		(AT_LOVELETTER_DOCKS)
		(AT_BUCKET_BAR)
		(AT_BUCKET_DOCKS)
		(AT_KNIGHTSHIELD_BAR)
		(AT_KNIGHTSHIELD_DOCKS)
		(AT_RUBYRING_BAR)
		(AT_RUBYRING_DOCKS)
		(AT_COIN_BAR)
		(AT_COIN_DOCKS)
		(AT_SILVER_BAR)
		(AT_SILVER_DOCKS)
		(AT_ARTHUR_JUNKYARD)
		(AT_ARTHUR_BASEMENT)
		(CLOSED_BASEMENTEXIT)
		(AT_MUSHROOM_BASEMENT)
		(AT_MUSHROOM_JUNKYARD)
		(AT_LOVELETTER_BASEMENT)
		(AT_LOVELETTER_JUNKYARD)
		(AT_BUCKET_BASEMENT)
		(AT_BUCKET_JUNKYARD)
		(AT_KNIGHTSHIELD_BASEMENT)
		(AT_KNIGHTSHIELD_JUNKYARD)
		(AT_RUBYRING_BASEMENT)
		(AT_RUBYRING_JUNKYARD)
		(AT_COIN_BASEMENT)
		(AT_COIN_JUNKYARD)
		(AT_SILVER_BASEMENT)
		(AT_SILVER_JUNKYARD)
		(AT_ARTHUR_STORAGE)
		(AT_MUSHROOM_STORAGE)
		(AT_LOVELETTER_STORAGE)
		(AT_BUCKET_STORAGE)
		(AT_KNIGHTSHIELD_STORAGE)
		(AT_RUBYRING_STORAGE)
		(AT_COIN_STORAGE)
		(AT_SILVER_STORAGE)
		(NOT-HAS_ARTHUR_BUCKET)
		(NOT-AT_ARTHUR_BASEMENT)
		(HAS_ARTHUR_SILVER)
		(NOT-AT_SILVER_STORAGE)
		(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
		(HAS_ARTHUR_COIN)
		(NOT-AT_COIN_STORAGE)
		(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
		(HAS_ARTHUR_RUBYRING)
		(NOT-AT_RUBYRING_STORAGE)
		(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
		(HAS_ARTHUR_KNIGHTSHIELD)
		(NOT-AT_KNIGHTSHIELD_STORAGE)
		(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
		(NOT-AT_BUCKET_STORAGE)
		(HAS_ARTHUR_LOVELETTER)
		(NOT-AT_LOVELETTER_STORAGE)
		(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
		(HAS_ARTHUR_MUSHROOM)
		(NOT-AT_MUSHROOM_STORAGE)
		(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
		(NOT-AT_ARTHUR_STORAGE)
		(NOT-AT_SILVER_JUNKYARD)
		(NOT-AT_SILVER_BASEMENT)
		(NOT-AT_COIN_JUNKYARD)
		(NOT-AT_COIN_BASEMENT)
		(NOT-AT_RUBYRING_JUNKYARD)
		(NOT-AT_RUBYRING_BASEMENT)
		(NOT-AT_KNIGHTSHIELD_JUNKYARD)
		(NOT-AT_KNIGHTSHIELD_BASEMENT)
		(NOT-AT_BUCKET_JUNKYARD)
		(NOT-AT_BUCKET_BASEMENT)
		(NOT-AT_LOVELETTER_JUNKYARD)
		(NOT-AT_LOVELETTER_BASEMENT)
		(NOT-AT_MUSHROOM_JUNKYARD)
		(NOT-AT_MUSHROOM_BASEMENT)
		(NOT-AT_ARTHUR_JUNKYARD)
		(NOT-CLOSED_BASEMENTEXIT)
		(NOT-AT_ARTHUR_BAR)
		(NOT-AT_ARTHUR_DOCKS)
		(NOT-AT_ARTHUR_TOWNARCH)
		(NOT-AT_SILVER_DOCKS)
		(NOT-AT_SILVER_BAR)
		(NOT-AT_COIN_DOCKS)
		(NOT-AT_COIN_BAR)
		(NOT-AT_RUBYRING_DOCKS)
		(NOT-AT_RUBYRING_BAR)
		(NOT-AT_KNIGHTSHIELD_DOCKS)
		(NOT-AT_KNIGHTSHIELD_BAR)
		(NOT-AT_BUCKET_DOCKS)
		(NOT-AT_BUCKET_BAR)
		(NOT-AT_LOVELETTER_DOCKS)
		(NOT-AT_LOVELETTER_BAR)
		(NOT-AT_MUSHROOM_DOCKS)
		(NOT-AT_MUSHROOM_BAR)
		(NOT-CLOSED_BARENTRANCE)
		(NOT-CLOSED_BAREXIT)
		(NOT-CLOSED_BASEMENTENTRANCE)
		(NOT-AT_ARTHUR_TOWNSQUARE)
		(WANTS-ITEM_JORDAN_LOVELETTER)
		(NOT-HAS_JORDAN_LOVELETTER)
		(NOT-AT_SILVER_HUT)
		(NOT-AT_SILVER_FORGE)
		(NOT-AT_SILVER_MANSION)
		(NOT-AT_SILVER_CLIFF)
		(NOT-AT_SILVER_BANK)
		(NOT-AT_SILVER_FORT)
		(NOT-AT_SILVER_VALLEY)
		(NOT-AT_SILVER_TOWNARCH)
		(NOT-AT_COIN_HUT)
		(NOT-AT_COIN_FORGE)
		(NOT-AT_COIN_MANSION)
		(NOT-AT_COIN_CLIFF)
		(NOT-AT_COIN_BANK)
		(NOT-AT_COIN_FORT)
		(NOT-AT_COIN_VALLEY)
		(NOT-AT_COIN_TOWNARCH)
		(NOT-AT_RUBYRING_HUT)
		(NOT-AT_RUBYRING_FORGE)
		(NOT-AT_RUBYRING_MANSION)
		(NOT-AT_RUBYRING_CLIFF)
		(NOT-AT_RUBYRING_BANK)
		(NOT-AT_RUBYRING_FORT)
		(NOT-AT_RUBYRING_VALLEY)
		(NOT-AT_RUBYRING_TOWNARCH)
		(NOT-AT_KNIGHTSHIELD_HUT)
		(NOT-AT_KNIGHTSHIELD_FORGE)
		(NOT-AT_KNIGHTSHIELD_MANSION)
		(NOT-AT_KNIGHTSHIELD_CLIFF)
		(NOT-AT_KNIGHTSHIELD_BANK)
		(NOT-AT_KNIGHTSHIELD_FORT)
		(NOT-AT_KNIGHTSHIELD_VALLEY)
		(NOT-AT_KNIGHTSHIELD_TOWNARCH)
		(NOT-AT_BUCKET_HUT)
		(NOT-AT_BUCKET_FORGE)
		(NOT-AT_BUCKET_MANSION)
		(NOT-AT_BUCKET_CLIFF)
		(NOT-AT_BUCKET_BANK)
		(NOT-AT_BUCKET_SHOP)
		(NOT-AT_BUCKET_VALLEY)
		(NOT-AT_BUCKET_TOWNSQUARE)
		(NOT-AT_BUCKET_TOWNARCH)
		(NOT-AT_LOVELETTER_HUT)
		(NOT-AT_LOVELETTER_FORGE)
		(NOT-AT_LOVELETTER_MANSION)
		(NOT-AT_LOVELETTER_CLIFF)
		(NOT-AT_LOVELETTER_BANK)
		(NOT-AT_LOVELETTER_FORT)
		(NOT-AT_LOVELETTER_VALLEY)
		(NOT-AT_LOVELETTER_TOWNARCH)
		(NOT-AT_MUSHROOM_HUT)
		(NOT-AT_MUSHROOM_FORGE)
		(NOT-AT_MUSHROOM_MANSION)
		(NOT-AT_MUSHROOM_CLIFF)
		(NOT-AT_MUSHROOM_BANK)
		(NOT-AT_MUSHROOM_FORT)
		(NOT-AT_MUSHROOM_VALLEY)
		(NOT-AT_MUSHROOM_TOWNARCH)
		(AT_BUCKET_FORT)
		(NOT-AT_ARTHUR_MANSION)
		(NOT-AT_ARTHUR_FORT)
		(NOT-AT_ARTHUR_VALLEY)
		(NOT-AT_ARTHUR_HUT)
		(NOT-AT_ARTHUR_FORGE)
		(NOT-AT_ARTHUR_CLIFF)
		(NOT-AT_ARTHUR_BANK)
		(NOT-CLOSED_MANSIONENTRANCE)
		(NOT-CLOSED_BANKEXIT)
		(NOT-CLOSED_FORTEXIT)
		(NOT-CLOSED_FORTENTRANCE)
		(CLOSED_FORGEENTRANCE)
		(CLOSED_HUTENTRANCE)
		(NOT-AT_SILVER_TOWNSQUARE)
		(NOT-AT_COIN_TOWNSQUARE)
		(NOT-AT_RUBYRING_TOWNSQUARE)
		(NOT-AT_KNIGHTSHIELD_TOWNSQUARE)
		(NOT-AT_LOVELETTER_TOWNSQUARE)
		(NOT-AT_MUSHROOM_TOWNSQUARE)
		(NOT-CLOSED_SHOPEXIT)
		(NOT-CLOSED_BANKENTRANCE)
		(NOT-CLOSED_SHOPENTRANCE)
		(AT_ARTHUR_SHOP)
		(NOT-AT_SILVER_SHOP)
		(NOT-AT_COIN_SHOP)
		(NOT-AT_RUBYRING_SHOP)
		(NOT-AT_KNIGHTSHIELD_SHOP)
		(NOT-AT_LOVELETTER_SHOP)
		(NOT-AT_MUSHROOM_SHOP)
		(EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_FORT_FORTEXIT_VALLEY_1)
		(EXPLAINED_MOVE-THROUGH-DOORWAY_ARTHUR_VALLEY_TOWNSQUARE_1)
		(EXPLAINED_OPEN_ARTHUR_SHOPENTRANCE_TOWNSQUARE_1)
		(EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1)
		(EXPLAINED_PICKUP_ARTHUR_RUBYRING_SHOP_1)
		(EXPLAINED_PICKUP_ARTHUR_KNIGHTSHIELD_SHOP_1)
		(EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE_1)
		(EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_BANK_BANKEXIT_TOWNSQUARE_1)
		(EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_2)
		(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_FORT_FORTEXIT_VALLEY_1)
		(NOT_EXPLAINED_MOVE-THROUGH-DOORWAY_ARTHUR_VALLEY_TOWNSQUARE_1)
		(NOT_EXPLAINED_OPEN_ARTHUR_SHOPENTRANCE_TOWNSQUARE_1)
		(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1)
		(NOT_EXPLAINED_PICKUP_ARTHUR_RUBYRING_SHOP_1)
		(NOT_EXPLAINED_PICKUP_ARTHUR_KNIGHTSHIELD_SHOP_1)
		(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE_1)
		(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_BANK_BANKEXIT_TOWNSQUARE_1)
		(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_2)
		(EXPLAINED_FULL_OBS_SEQUENCE)
		(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
	) 
	(:functions (total-cost))
	(:action EXPLAIN_OBS_MOVE-THROUGH-ENTRANCE_ARTHUR_FORT_FORTEXIT_VALLEY_1
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_FORTEXIT)
			(NOT-AT_ARTHUR_VALLEY)
			(AT_ARTHUR_FORT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_FORT)
			(AT_ARTHUR_VALLEY)
			 (EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_FORT_FORTEXIT_VALLEY_1)
			(not (AT_ARTHUR_FORT))
			(not (NOT-AT_ARTHUR_VALLEY))
			 (not (NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_FORT_FORTEXIT_VALLEY_1))
		)
	)
	(:action EXPLAIN_OBS_MOVE-THROUGH-DOORWAY_ARTHUR_VALLEY_TOWNSQUARE_1
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_VALLEY)
			(EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_FORT_FORTEXIT_VALLEY_1)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_VALLEY)
			(AT_ARTHUR_TOWNSQUARE)
			 (EXPLAINED_MOVE-THROUGH-DOORWAY_ARTHUR_VALLEY_TOWNSQUARE_1)
			(not (AT_ARTHUR_VALLEY))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
			 (not (NOT_EXPLAINED_MOVE-THROUGH-DOORWAY_ARTHUR_VALLEY_TOWNSQUARE_1))
		)
	)
	(:action MOVE-THROUGH-DOORWAY_ARTHUR_VALLEY_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_VALLEY)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_FORT_FORTEXIT_VALLEY_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_VALLEY)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_VALLEY))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action EXPLAIN_OBS_OPEN_ARTHUR_SHOPENTRANCE_TOWNSQUARE_1
		:parameters ()
		:precondition
		(and
			(CLOSED_SHOPENTRANCE)
			(AT_ARTHUR_TOWNSQUARE)
			(EXPLAINED_MOVE-THROUGH-DOORWAY_ARTHUR_VALLEY_TOWNSQUARE_1)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-CLOSED_SHOPENTRANCE)
			 (EXPLAINED_OPEN_ARTHUR_SHOPENTRANCE_TOWNSQUARE_1)
			(not (CLOSED_SHOPENTRANCE))
			 (not (NOT_EXPLAINED_OPEN_ARTHUR_SHOPENTRANCE_TOWNSQUARE_1))
		)
	)
	(:action OPEN_ARTHUR_SHOPENTRANCE_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(CLOSED_SHOPENTRANCE)
			(AT_ARTHUR_TOWNSQUARE)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_FORT_FORTEXIT_VALLEY_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-CLOSED_SHOPENTRANCE)
			(not (CLOSED_SHOPENTRANCE))
		)
	)
	(:action OPEN_ARTHUR_SHOPENTRANCE_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(CLOSED_SHOPENTRANCE)
			(AT_ARTHUR_TOWNSQUARE)
			(NOT_EXPLAINED_MOVE-THROUGH-DOORWAY_ARTHUR_VALLEY_TOWNSQUARE_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-CLOSED_SHOPENTRANCE)
			(not (CLOSED_SHOPENTRANCE))
		)
	)
	(:action EXPLAIN_OBS_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_SHOPENTRANCE)
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
			(EXPLAINED_OPEN_ARTHUR_SHOPENTRANCE_TOWNSQUARE_1)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			 (EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_SHOP))
			 (not (NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_SHOPENTRANCE)
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_FORT_FORTEXIT_VALLEY_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_SHOP))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_SHOPENTRANCE)
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
			(NOT_EXPLAINED_MOVE-THROUGH-DOORWAY_ARTHUR_VALLEY_TOWNSQUARE_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_SHOP))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_SHOPENTRANCE)
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
			(NOT_EXPLAINED_OPEN_ARTHUR_SHOPENTRANCE_TOWNSQUARE_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_SHOP))
		)
	)
	(:action EXPLAIN_OBS_PICKUP_ARTHUR_RUBYRING_SHOP_1
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_SHOP)
			(AT_ARTHUR_SHOP)
			(EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_SHOP)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			 (EXPLAINED_PICKUP_ARTHUR_RUBYRING_SHOP_1)
			(not (AT_RUBYRING_SHOP))
			(not (NOT-HAS_ARTHUR_RUBYRING))
			 (not (NOT_EXPLAINED_PICKUP_ARTHUR_RUBYRING_SHOP_1))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_SHOP
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_SHOP)
			(AT_ARTHUR_SHOP)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_FORT_FORTEXIT_VALLEY_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_SHOP)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_SHOP))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_SHOP
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_SHOP)
			(AT_ARTHUR_SHOP)
			(NOT_EXPLAINED_MOVE-THROUGH-DOORWAY_ARTHUR_VALLEY_TOWNSQUARE_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_SHOP)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_SHOP))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_SHOP
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_SHOP)
			(AT_ARTHUR_SHOP)
			(NOT_EXPLAINED_OPEN_ARTHUR_SHOPENTRANCE_TOWNSQUARE_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_SHOP)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_SHOP))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_SHOP
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_SHOP)
			(AT_ARTHUR_SHOP)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_SHOP)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_SHOP))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action EXPLAIN_OBS_PICKUP_ARTHUR_KNIGHTSHIELD_SHOP_1
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_SHOP)
			(AT_ARTHUR_SHOP)
			(EXPLAINED_PICKUP_ARTHUR_RUBYRING_SHOP_1)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_SHOP)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			 (EXPLAINED_PICKUP_ARTHUR_KNIGHTSHIELD_SHOP_1)
			(not (AT_KNIGHTSHIELD_SHOP))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
			 (not (NOT_EXPLAINED_PICKUP_ARTHUR_KNIGHTSHIELD_SHOP_1))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_SHOP
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_SHOP)
			(AT_ARTHUR_SHOP)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_FORT_FORTEXIT_VALLEY_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_SHOP)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_SHOP))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_SHOP
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_SHOP)
			(AT_ARTHUR_SHOP)
			(NOT_EXPLAINED_MOVE-THROUGH-DOORWAY_ARTHUR_VALLEY_TOWNSQUARE_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_SHOP)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_SHOP))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_SHOP
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_SHOP)
			(AT_ARTHUR_SHOP)
			(NOT_EXPLAINED_OPEN_ARTHUR_SHOPENTRANCE_TOWNSQUARE_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_SHOP)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_SHOP))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_SHOP
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_SHOP)
			(AT_ARTHUR_SHOP)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_SHOP)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_SHOP))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_SHOP
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_SHOP)
			(AT_ARTHUR_SHOP)
			(NOT_EXPLAINED_PICKUP_ARTHUR_RUBYRING_SHOP_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_SHOP)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_SHOP))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action EXPLAIN_OBS_MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE_1
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_SHOPEXIT)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			(EXPLAINED_PICKUP_ARTHUR_KNIGHTSHIELD_SHOP_1)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
			 (EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE_1)
			(not (AT_ARTHUR_SHOP))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
			 (not (NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE_1))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_SHOPEXIT)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_FORT_FORTEXIT_VALLEY_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_SHOP))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_SHOPEXIT)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			(NOT_EXPLAINED_MOVE-THROUGH-DOORWAY_ARTHUR_VALLEY_TOWNSQUARE_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_SHOP))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_SHOPEXIT)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			(NOT_EXPLAINED_OPEN_ARTHUR_SHOPENTRANCE_TOWNSQUARE_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_SHOP))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_SHOPEXIT)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_SHOP))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_SHOPEXIT)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			(NOT_EXPLAINED_PICKUP_ARTHUR_RUBYRING_SHOP_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_SHOP))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_SHOPEXIT)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			(NOT_EXPLAINED_PICKUP_ARTHUR_KNIGHTSHIELD_SHOP_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_SHOP))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action EXPLAIN_OBS_MOVE-THROUGH-ENTRANCE_ARTHUR_BANK_BANKEXIT_TOWNSQUARE_1
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_BANKEXIT)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_BANK)
			(EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE_1)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_BANK)
			(AT_ARTHUR_TOWNSQUARE)
			 (EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_BANK_BANKEXIT_TOWNSQUARE_1)
			(not (AT_ARTHUR_BANK))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
			 (not (NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_BANK_BANKEXIT_TOWNSQUARE_1))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_BANK_BANKEXIT_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_BANKEXIT)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_BANK)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_FORT_FORTEXIT_VALLEY_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_BANK)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_BANK))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_BANK_BANKEXIT_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_BANKEXIT)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_BANK)
			(NOT_EXPLAINED_MOVE-THROUGH-DOORWAY_ARTHUR_VALLEY_TOWNSQUARE_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_BANK)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_BANK))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_BANK_BANKEXIT_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_BANKEXIT)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_BANK)
			(NOT_EXPLAINED_OPEN_ARTHUR_SHOPENTRANCE_TOWNSQUARE_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_BANK)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_BANK))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_BANK_BANKEXIT_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_BANKEXIT)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_BANK)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_BANK)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_BANK))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_BANK_BANKEXIT_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_BANKEXIT)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_BANK)
			(NOT_EXPLAINED_PICKUP_ARTHUR_RUBYRING_SHOP_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_BANK)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_BANK))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_BANK_BANKEXIT_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_BANKEXIT)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_BANK)
			(NOT_EXPLAINED_PICKUP_ARTHUR_KNIGHTSHIELD_SHOP_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_BANK)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_BANK))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_BANK_BANKEXIT_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_BANKEXIT)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_BANK)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_BANK)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_BANK))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action EXPLAIN_OBS_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_2
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_SHOPENTRANCE)
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
			(EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_BANK_BANKEXIT_TOWNSQUARE_1)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			 (EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_2)
			 (EXPLAINED_FULL_OBS_SEQUENCE)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_SHOP))
			 (not (NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_2))
			 (not (NOT_EXPLAINED_FULL_OBS_SEQUENCE))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_SHOPENTRANCE)
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_FORT_FORTEXIT_VALLEY_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_SHOP))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_SHOPENTRANCE)
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
			(NOT_EXPLAINED_MOVE-THROUGH-DOORWAY_ARTHUR_VALLEY_TOWNSQUARE_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_SHOP))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_SHOPENTRANCE)
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
			(NOT_EXPLAINED_OPEN_ARTHUR_SHOPENTRANCE_TOWNSQUARE_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_SHOP))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_SHOPENTRANCE)
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_SHOP))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_SHOPENTRANCE)
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
			(NOT_EXPLAINED_PICKUP_ARTHUR_RUBYRING_SHOP_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_SHOP))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_SHOPENTRANCE)
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
			(NOT_EXPLAINED_PICKUP_ARTHUR_KNIGHTSHIELD_SHOP_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_SHOP))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_SHOPENTRANCE)
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_SHOP_SHOPEXIT_TOWNSQUARE_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_SHOP))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_SHOPENTRANCE_SHOP
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_SHOPENTRANCE)
			(NOT-AT_ARTHUR_SHOP)
			(AT_ARTHUR_TOWNSQUARE)
			(NOT_EXPLAINED_MOVE-THROUGH-ENTRANCE_ARTHUR_BANK_BANKEXIT_TOWNSQUARE_1)
			(NOT_EXPLAINED_FULL_OBS_SEQUENCE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_SHOP)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_SHOP))
		)
	)
	(:action PICKUP_ARTHUR_SILVER_STORAGE
		:parameters ()
		:precondition
		(and
			(AT_SILVER_STORAGE)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SILVER_STORAGE)
			(HAS_ARTHUR_SILVER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(not (AT_SILVER_STORAGE))
			(not (NOT-HAS_ARTHUR_SILVER))
		)
	)
	(:action PICKUP_ARTHUR_COIN_STORAGE
		:parameters ()
		:precondition
		(and
			(AT_COIN_STORAGE)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_COIN_STORAGE)
			(HAS_ARTHUR_COIN)
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(not (AT_COIN_STORAGE))
			(not (NOT-HAS_ARTHUR_COIN))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_STORAGE
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_STORAGE)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_STORAGE)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_STORAGE))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_STORAGE
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_STORAGE)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_STORAGE)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_STORAGE))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_BUCKET_STORAGE
		:parameters ()
		:precondition
		(and
			(AT_BUCKET_STORAGE)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BUCKET_STORAGE)
			(HAS_ARTHUR_BUCKET)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(not (AT_BUCKET_STORAGE))
			(not (NOT-HAS_ARTHUR_BUCKET))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_STORAGE
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_STORAGE)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_STORAGE)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_STORAGE))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_STORAGE
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_STORAGE)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_STORAGE)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_STORAGE))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action MOVE-THROUGH-DOORWAY_ARTHUR_STORAGE_BASEMENT
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_BASEMENT)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_STORAGE)
			(AT_ARTHUR_BASEMENT)
			(not (AT_ARTHUR_STORAGE))
			(not (NOT-AT_ARTHUR_BASEMENT))
		)
	)
	(:action DROP_ARTHUR_SILVER_STORAGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(HAS_ARTHUR_SILVER)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SILVER)
			(AT_SILVER_STORAGE)
			(not (HAS_ARTHUR_SILVER))
			(not (NOT-AT_SILVER_STORAGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SILVER))
		)
	)
	(:action DROP_ARTHUR_COIN_STORAGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(HAS_ARTHUR_COIN)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_COIN)
			(AT_COIN_STORAGE)
			(not (HAS_ARTHUR_COIN))
			(not (NOT-AT_COIN_STORAGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_COIN))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_STORAGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_STORAGE)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_STORAGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_STORAGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_STORAGE)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_STORAGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_BUCKET_STORAGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(HAS_ARTHUR_BUCKET)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BUCKET)
			(AT_BUCKET_STORAGE)
			(not (HAS_ARTHUR_BUCKET))
			(not (NOT-AT_BUCKET_STORAGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_STORAGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_STORAGE)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_STORAGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_STORAGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_STORAGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_STORAGE)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_STORAGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_SILVER_JUNKYARD
		:parameters ()
		:precondition
		(and
			(AT_SILVER_JUNKYARD)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SILVER_JUNKYARD)
			(HAS_ARTHUR_SILVER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(not (AT_SILVER_JUNKYARD))
			(not (NOT-HAS_ARTHUR_SILVER))
		)
	)
	(:action PICKUP_ARTHUR_SILVER_BASEMENT
		:parameters ()
		:precondition
		(and
			(AT_SILVER_BASEMENT)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SILVER_BASEMENT)
			(HAS_ARTHUR_SILVER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(not (AT_SILVER_BASEMENT))
			(not (NOT-HAS_ARTHUR_SILVER))
		)
	)
	(:action PICKUP_ARTHUR_COIN_JUNKYARD
		:parameters ()
		:precondition
		(and
			(AT_COIN_JUNKYARD)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_COIN_JUNKYARD)
			(HAS_ARTHUR_COIN)
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(not (AT_COIN_JUNKYARD))
			(not (NOT-HAS_ARTHUR_COIN))
		)
	)
	(:action PICKUP_ARTHUR_COIN_BASEMENT
		:parameters ()
		:precondition
		(and
			(AT_COIN_BASEMENT)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_COIN_BASEMENT)
			(HAS_ARTHUR_COIN)
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(not (AT_COIN_BASEMENT))
			(not (NOT-HAS_ARTHUR_COIN))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_JUNKYARD
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_JUNKYARD)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_JUNKYARD)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_JUNKYARD))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_BASEMENT
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_BASEMENT)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_BASEMENT)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_BASEMENT))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_JUNKYARD
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_JUNKYARD)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_JUNKYARD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_JUNKYARD))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_BASEMENT
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_BASEMENT)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_BASEMENT)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_BASEMENT))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_BUCKET_JUNKYARD
		:parameters ()
		:precondition
		(and
			(AT_BUCKET_JUNKYARD)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BUCKET_JUNKYARD)
			(HAS_ARTHUR_BUCKET)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(not (AT_BUCKET_JUNKYARD))
			(not (NOT-HAS_ARTHUR_BUCKET))
		)
	)
	(:action PICKUP_ARTHUR_BUCKET_BASEMENT
		:parameters ()
		:precondition
		(and
			(AT_BUCKET_BASEMENT)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BUCKET_BASEMENT)
			(HAS_ARTHUR_BUCKET)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(not (AT_BUCKET_BASEMENT))
			(not (NOT-HAS_ARTHUR_BUCKET))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_JUNKYARD
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_JUNKYARD)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_JUNKYARD)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_JUNKYARD))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_BASEMENT
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_BASEMENT)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_BASEMENT)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_BASEMENT))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_JUNKYARD
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_JUNKYARD)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_JUNKYARD)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_JUNKYARD))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_BASEMENT
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_BASEMENT)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_BASEMENT)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_BASEMENT))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action OPEN_ARTHUR_BASEMENTEXIT_BASEMENT
		:parameters ()
		:precondition
		(and
			(CLOSED_BASEMENTEXIT)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-CLOSED_BASEMENTEXIT)
			(not (CLOSED_BASEMENTEXIT))
		)
	)
	(:action MOVE-THROUGH-DOORWAY_ARTHUR_BASEMENT_STORAGE
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_STORAGE)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_BASEMENT)
			(AT_ARTHUR_STORAGE)
			(not (AT_ARTHUR_BASEMENT))
			(not (NOT-AT_ARTHUR_STORAGE))
		)
	)
	(:action DROP_ARTHUR_SILVER_JUNKYARD
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(HAS_ARTHUR_SILVER)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SILVER)
			(AT_SILVER_JUNKYARD)
			(not (HAS_ARTHUR_SILVER))
			(not (NOT-AT_SILVER_JUNKYARD))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SILVER))
		)
	)
	(:action DROP_ARTHUR_SILVER_BASEMENT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(HAS_ARTHUR_SILVER)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SILVER)
			(AT_SILVER_BASEMENT)
			(not (HAS_ARTHUR_SILVER))
			(not (NOT-AT_SILVER_BASEMENT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SILVER))
		)
	)
	(:action DROP_ARTHUR_COIN_JUNKYARD
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(HAS_ARTHUR_COIN)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_COIN)
			(AT_COIN_JUNKYARD)
			(not (HAS_ARTHUR_COIN))
			(not (NOT-AT_COIN_JUNKYARD))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_COIN))
		)
	)
	(:action DROP_ARTHUR_COIN_BASEMENT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(HAS_ARTHUR_COIN)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_COIN)
			(AT_COIN_BASEMENT)
			(not (HAS_ARTHUR_COIN))
			(not (NOT-AT_COIN_BASEMENT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_COIN))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_JUNKYARD
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_JUNKYARD)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_JUNKYARD))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_BASEMENT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_BASEMENT)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_BASEMENT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_JUNKYARD
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_JUNKYARD)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_JUNKYARD))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_BASEMENT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_BASEMENT)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_BASEMENT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_BUCKET_JUNKYARD
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(HAS_ARTHUR_BUCKET)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BUCKET)
			(AT_BUCKET_JUNKYARD)
			(not (HAS_ARTHUR_BUCKET))
			(not (NOT-AT_BUCKET_JUNKYARD))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET))
		)
	)
	(:action DROP_ARTHUR_BUCKET_BASEMENT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(HAS_ARTHUR_BUCKET)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BUCKET)
			(AT_BUCKET_BASEMENT)
			(not (HAS_ARTHUR_BUCKET))
			(not (NOT-AT_BUCKET_BASEMENT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_JUNKYARD
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_JUNKYARD)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_JUNKYARD))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_BASEMENT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_BASEMENT)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_BASEMENT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_JUNKYARD
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_JUNKYARD)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_JUNKYARD)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_JUNKYARD))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_BASEMENT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_BASEMENT)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_BASEMENT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_SILVER_DOCKS
		:parameters ()
		:precondition
		(and
			(AT_SILVER_DOCKS)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SILVER_DOCKS)
			(HAS_ARTHUR_SILVER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(not (AT_SILVER_DOCKS))
			(not (NOT-HAS_ARTHUR_SILVER))
		)
	)
	(:action PICKUP_ARTHUR_SILVER_BAR
		:parameters ()
		:precondition
		(and
			(AT_SILVER_BAR)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SILVER_BAR)
			(HAS_ARTHUR_SILVER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(not (AT_SILVER_BAR))
			(not (NOT-HAS_ARTHUR_SILVER))
		)
	)
	(:action PICKUP_ARTHUR_COIN_DOCKS
		:parameters ()
		:precondition
		(and
			(AT_COIN_DOCKS)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_COIN_DOCKS)
			(HAS_ARTHUR_COIN)
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(not (AT_COIN_DOCKS))
			(not (NOT-HAS_ARTHUR_COIN))
		)
	)
	(:action PICKUP_ARTHUR_COIN_BAR
		:parameters ()
		:precondition
		(and
			(AT_COIN_BAR)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_COIN_BAR)
			(HAS_ARTHUR_COIN)
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(not (AT_COIN_BAR))
			(not (NOT-HAS_ARTHUR_COIN))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_DOCKS
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_DOCKS)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_DOCKS)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_DOCKS))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_BAR
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_BAR)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_BAR)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_BAR))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_DOCKS
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_DOCKS)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_DOCKS)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_DOCKS))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_BAR
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_BAR)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_BAR)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_BAR))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_BUCKET_DOCKS
		:parameters ()
		:precondition
		(and
			(AT_BUCKET_DOCKS)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BUCKET_DOCKS)
			(HAS_ARTHUR_BUCKET)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(not (AT_BUCKET_DOCKS))
			(not (NOT-HAS_ARTHUR_BUCKET))
		)
	)
	(:action PICKUP_ARTHUR_BUCKET_BAR
		:parameters ()
		:precondition
		(and
			(AT_BUCKET_BAR)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BUCKET_BAR)
			(HAS_ARTHUR_BUCKET)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(not (AT_BUCKET_BAR))
			(not (NOT-HAS_ARTHUR_BUCKET))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_DOCKS
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_DOCKS)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_DOCKS)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_DOCKS))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_BAR
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_BAR)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_BAR)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_BAR))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_DOCKS
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_DOCKS)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_DOCKS)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_DOCKS))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_BAR
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_BAR)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_BAR)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_BAR))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action CLOSE_ARTHUR_BASEMENTEXIT_BASEMENT
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_BASEMENTEXIT)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(CLOSED_BASEMENTEXIT)
			(not (NOT-CLOSED_BASEMENTEXIT))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_BASEMENT_BASEMENTEXIT_BAR
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_BASEMENTEXIT)
			(NOT-AT_ARTHUR_BAR)
			(AT_ARTHUR_BASEMENT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_BASEMENT)
			(AT_ARTHUR_BAR)
			(not (AT_ARTHUR_BASEMENT))
			(not (NOT-AT_ARTHUR_BAR))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_BAR_BASEMENTENTRANCE_BASEMENT
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_BASEMENTENTRANCE)
			(NOT-AT_ARTHUR_BASEMENT)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_BAR)
			(AT_ARTHUR_BASEMENT)
			(not (AT_ARTHUR_BAR))
			(not (NOT-AT_ARTHUR_BASEMENT))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_BAR_BAREXIT_DOCKS
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_BAREXIT)
			(NOT-AT_ARTHUR_DOCKS)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_BAR)
			(AT_ARTHUR_DOCKS)
			(not (AT_ARTHUR_BAR))
			(not (NOT-AT_ARTHUR_DOCKS))
		)
	)
	(:action OPEN_ARTHUR_BARENTRANCE_DOCKS
		:parameters ()
		:precondition
		(and
			(CLOSED_BARENTRANCE)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-CLOSED_BARENTRANCE)
			(not (CLOSED_BARENTRANCE))
		)
	)
	(:action OPEN_ARTHUR_BAREXIT_BAR
		:parameters ()
		:precondition
		(and
			(CLOSED_BAREXIT)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-CLOSED_BAREXIT)
			(not (CLOSED_BAREXIT))
		)
	)
	(:action OPEN_ARTHUR_BASEMENTENTRANCE_BAR
		:parameters ()
		:precondition
		(and
			(CLOSED_BASEMENTENTRANCE)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-CLOSED_BASEMENTENTRANCE)
			(not (CLOSED_BASEMENTENTRANCE))
		)
	)
	(:action MOVE-THROUGH-DOORWAY_ARTHUR_DOCKS_JUNKYARD
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_JUNKYARD)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_DOCKS)
			(AT_ARTHUR_JUNKYARD)
			(not (AT_ARTHUR_DOCKS))
			(not (NOT-AT_ARTHUR_JUNKYARD))
		)
	)
	(:action MOVE-THROUGH-DOORWAY_ARTHUR_DOCKS_TOWNARCH
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_DOCKS)
			(AT_ARTHUR_TOWNARCH)
			(not (AT_ARTHUR_DOCKS))
			(not (NOT-AT_ARTHUR_TOWNARCH))
		)
	)
	(:action DROP_ARTHUR_SILVER_DOCKS
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(HAS_ARTHUR_SILVER)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SILVER)
			(AT_SILVER_DOCKS)
			(not (HAS_ARTHUR_SILVER))
			(not (NOT-AT_SILVER_DOCKS))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SILVER))
		)
	)
	(:action DROP_ARTHUR_SILVER_BAR
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(HAS_ARTHUR_SILVER)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SILVER)
			(AT_SILVER_BAR)
			(not (HAS_ARTHUR_SILVER))
			(not (NOT-AT_SILVER_BAR))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SILVER))
		)
	)
	(:action DROP_ARTHUR_COIN_DOCKS
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(HAS_ARTHUR_COIN)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_COIN)
			(AT_COIN_DOCKS)
			(not (HAS_ARTHUR_COIN))
			(not (NOT-AT_COIN_DOCKS))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_COIN))
		)
	)
	(:action DROP_ARTHUR_COIN_BAR
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(HAS_ARTHUR_COIN)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_COIN)
			(AT_COIN_BAR)
			(not (HAS_ARTHUR_COIN))
			(not (NOT-AT_COIN_BAR))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_COIN))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_DOCKS
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_DOCKS)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_DOCKS))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_BAR
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_BAR)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_BAR))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_DOCKS
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_DOCKS)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_DOCKS))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_BAR
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_BAR)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_BAR))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_BUCKET_DOCKS
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(HAS_ARTHUR_BUCKET)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BUCKET)
			(AT_BUCKET_DOCKS)
			(not (HAS_ARTHUR_BUCKET))
			(not (NOT-AT_BUCKET_DOCKS))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET))
		)
	)
	(:action DROP_ARTHUR_BUCKET_BAR
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(HAS_ARTHUR_BUCKET)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BUCKET)
			(AT_BUCKET_BAR)
			(not (HAS_ARTHUR_BUCKET))
			(not (NOT-AT_BUCKET_BAR))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_DOCKS
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_DOCKS)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_DOCKS))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_BAR
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_BAR)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_BAR))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_DOCKS
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_DOCKS)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_DOCKS))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_BAR
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_BAR)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_BAR))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_SILVER_HUT
		:parameters ()
		:precondition
		(and
			(AT_SILVER_HUT)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SILVER_HUT)
			(HAS_ARTHUR_SILVER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(not (AT_SILVER_HUT))
			(not (NOT-HAS_ARTHUR_SILVER))
		)
	)
	(:action PICKUP_ARTHUR_SILVER_FORGE
		:parameters ()
		:precondition
		(and
			(AT_SILVER_FORGE)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SILVER_FORGE)
			(HAS_ARTHUR_SILVER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(not (AT_SILVER_FORGE))
			(not (NOT-HAS_ARTHUR_SILVER))
		)
	)
	(:action PICKUP_ARTHUR_SILVER_MANSION
		:parameters ()
		:precondition
		(and
			(AT_SILVER_MANSION)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SILVER_MANSION)
			(HAS_ARTHUR_SILVER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(not (AT_SILVER_MANSION))
			(not (NOT-HAS_ARTHUR_SILVER))
		)
	)
	(:action PICKUP_ARTHUR_SILVER_CLIFF
		:parameters ()
		:precondition
		(and
			(AT_SILVER_CLIFF)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SILVER_CLIFF)
			(HAS_ARTHUR_SILVER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(not (AT_SILVER_CLIFF))
			(not (NOT-HAS_ARTHUR_SILVER))
		)
	)
	(:action PICKUP_ARTHUR_SILVER_BANK
		:parameters ()
		:precondition
		(and
			(AT_SILVER_BANK)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SILVER_BANK)
			(HAS_ARTHUR_SILVER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(not (AT_SILVER_BANK))
			(not (NOT-HAS_ARTHUR_SILVER))
		)
	)
	(:action PICKUP_ARTHUR_SILVER_FORT
		:parameters ()
		:precondition
		(and
			(AT_SILVER_FORT)
			(AT_ARTHUR_FORT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SILVER_FORT)
			(HAS_ARTHUR_SILVER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(not (AT_SILVER_FORT))
			(not (NOT-HAS_ARTHUR_SILVER))
		)
	)
	(:action PICKUP_ARTHUR_SILVER_VALLEY
		:parameters ()
		:precondition
		(and
			(AT_SILVER_VALLEY)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SILVER_VALLEY)
			(HAS_ARTHUR_SILVER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(not (AT_SILVER_VALLEY))
			(not (NOT-HAS_ARTHUR_SILVER))
		)
	)
	(:action PICKUP_ARTHUR_SILVER_TOWNARCH
		:parameters ()
		:precondition
		(and
			(AT_SILVER_TOWNARCH)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SILVER_TOWNARCH)
			(HAS_ARTHUR_SILVER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(not (AT_SILVER_TOWNARCH))
			(not (NOT-HAS_ARTHUR_SILVER))
		)
	)
	(:action PICKUP_ARTHUR_COIN_HUT
		:parameters ()
		:precondition
		(and
			(AT_COIN_HUT)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_COIN_HUT)
			(HAS_ARTHUR_COIN)
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(not (AT_COIN_HUT))
			(not (NOT-HAS_ARTHUR_COIN))
		)
	)
	(:action PICKUP_ARTHUR_COIN_FORGE
		:parameters ()
		:precondition
		(and
			(AT_COIN_FORGE)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_COIN_FORGE)
			(HAS_ARTHUR_COIN)
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(not (AT_COIN_FORGE))
			(not (NOT-HAS_ARTHUR_COIN))
		)
	)
	(:action PICKUP_ARTHUR_COIN_MANSION
		:parameters ()
		:precondition
		(and
			(AT_COIN_MANSION)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_COIN_MANSION)
			(HAS_ARTHUR_COIN)
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(not (AT_COIN_MANSION))
			(not (NOT-HAS_ARTHUR_COIN))
		)
	)
	(:action PICKUP_ARTHUR_COIN_CLIFF
		:parameters ()
		:precondition
		(and
			(AT_COIN_CLIFF)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_COIN_CLIFF)
			(HAS_ARTHUR_COIN)
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(not (AT_COIN_CLIFF))
			(not (NOT-HAS_ARTHUR_COIN))
		)
	)
	(:action PICKUP_ARTHUR_COIN_BANK
		:parameters ()
		:precondition
		(and
			(AT_COIN_BANK)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_COIN_BANK)
			(HAS_ARTHUR_COIN)
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(not (AT_COIN_BANK))
			(not (NOT-HAS_ARTHUR_COIN))
		)
	)
	(:action PICKUP_ARTHUR_COIN_FORT
		:parameters ()
		:precondition
		(and
			(AT_COIN_FORT)
			(AT_ARTHUR_FORT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_COIN_FORT)
			(HAS_ARTHUR_COIN)
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(not (AT_COIN_FORT))
			(not (NOT-HAS_ARTHUR_COIN))
		)
	)
	(:action PICKUP_ARTHUR_COIN_VALLEY
		:parameters ()
		:precondition
		(and
			(AT_COIN_VALLEY)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_COIN_VALLEY)
			(HAS_ARTHUR_COIN)
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(not (AT_COIN_VALLEY))
			(not (NOT-HAS_ARTHUR_COIN))
		)
	)
	(:action PICKUP_ARTHUR_COIN_TOWNARCH
		:parameters ()
		:precondition
		(and
			(AT_COIN_TOWNARCH)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_COIN_TOWNARCH)
			(HAS_ARTHUR_COIN)
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(not (AT_COIN_TOWNARCH))
			(not (NOT-HAS_ARTHUR_COIN))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_HUT
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_HUT)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_HUT)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_HUT))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_FORGE
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_FORGE)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_FORGE)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_FORGE))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_MANSION
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_MANSION)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_MANSION)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_MANSION))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_CLIFF
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_CLIFF)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_CLIFF)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_CLIFF))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_BANK
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_BANK)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_BANK)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_BANK))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_FORT
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_FORT)
			(AT_ARTHUR_FORT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_FORT)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_FORT))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_VALLEY
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_VALLEY)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_VALLEY)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_VALLEY))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_TOWNARCH
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_TOWNARCH)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_TOWNARCH)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_TOWNARCH))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_HUT
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_HUT)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_HUT)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_HUT))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_FORGE
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_FORGE)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_FORGE)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_FORGE))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_MANSION
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_MANSION)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_MANSION)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_MANSION))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_CLIFF
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_CLIFF)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_CLIFF)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_CLIFF))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_BANK
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_BANK)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_BANK)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_BANK))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_FORT
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_FORT)
			(AT_ARTHUR_FORT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_FORT)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_FORT))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_VALLEY
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_VALLEY)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_VALLEY)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_VALLEY))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_TOWNARCH
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_TOWNARCH)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_TOWNARCH)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_TOWNARCH))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_BUCKET_HUT
		:parameters ()
		:precondition
		(and
			(AT_BUCKET_HUT)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BUCKET_HUT)
			(HAS_ARTHUR_BUCKET)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(not (AT_BUCKET_HUT))
			(not (NOT-HAS_ARTHUR_BUCKET))
		)
	)
	(:action PICKUP_ARTHUR_BUCKET_FORGE
		:parameters ()
		:precondition
		(and
			(AT_BUCKET_FORGE)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BUCKET_FORGE)
			(HAS_ARTHUR_BUCKET)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(not (AT_BUCKET_FORGE))
			(not (NOT-HAS_ARTHUR_BUCKET))
		)
	)
	(:action PICKUP_ARTHUR_BUCKET_MANSION
		:parameters ()
		:precondition
		(and
			(AT_BUCKET_MANSION)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BUCKET_MANSION)
			(HAS_ARTHUR_BUCKET)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(not (AT_BUCKET_MANSION))
			(not (NOT-HAS_ARTHUR_BUCKET))
		)
	)
	(:action PICKUP_ARTHUR_BUCKET_CLIFF
		:parameters ()
		:precondition
		(and
			(AT_BUCKET_CLIFF)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BUCKET_CLIFF)
			(HAS_ARTHUR_BUCKET)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(not (AT_BUCKET_CLIFF))
			(not (NOT-HAS_ARTHUR_BUCKET))
		)
	)
	(:action PICKUP_ARTHUR_BUCKET_BANK
		:parameters ()
		:precondition
		(and
			(AT_BUCKET_BANK)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BUCKET_BANK)
			(HAS_ARTHUR_BUCKET)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(not (AT_BUCKET_BANK))
			(not (NOT-HAS_ARTHUR_BUCKET))
		)
	)
	(:action PICKUP_ARTHUR_BUCKET_SHOP
		:parameters ()
		:precondition
		(and
			(AT_BUCKET_SHOP)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BUCKET_SHOP)
			(HAS_ARTHUR_BUCKET)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(not (AT_BUCKET_SHOP))
			(not (NOT-HAS_ARTHUR_BUCKET))
		)
	)
	(:action PICKUP_ARTHUR_BUCKET_VALLEY
		:parameters ()
		:precondition
		(and
			(AT_BUCKET_VALLEY)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BUCKET_VALLEY)
			(HAS_ARTHUR_BUCKET)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(not (AT_BUCKET_VALLEY))
			(not (NOT-HAS_ARTHUR_BUCKET))
		)
	)
	(:action PICKUP_ARTHUR_BUCKET_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(AT_BUCKET_TOWNSQUARE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BUCKET_TOWNSQUARE)
			(HAS_ARTHUR_BUCKET)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(not (AT_BUCKET_TOWNSQUARE))
			(not (NOT-HAS_ARTHUR_BUCKET))
		)
	)
	(:action PICKUP_ARTHUR_BUCKET_TOWNARCH
		:parameters ()
		:precondition
		(and
			(AT_BUCKET_TOWNARCH)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BUCKET_TOWNARCH)
			(HAS_ARTHUR_BUCKET)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(not (AT_BUCKET_TOWNARCH))
			(not (NOT-HAS_ARTHUR_BUCKET))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_HUT
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_HUT)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_HUT)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_HUT))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_FORGE
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_FORGE)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_FORGE)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_FORGE))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_MANSION
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_MANSION)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_MANSION)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_MANSION))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_CLIFF
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_CLIFF)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_CLIFF)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_CLIFF))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_BANK
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_BANK)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_BANK)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_BANK))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_FORT
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_FORT)
			(AT_ARTHUR_FORT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_FORT)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_FORT))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_VALLEY
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_VALLEY)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_VALLEY)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_VALLEY))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_TOWNARCH
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_TOWNARCH)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_TOWNARCH)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_TOWNARCH))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_HUT
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_HUT)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_HUT)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_HUT))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_FORGE
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_FORGE)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_FORGE)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_FORGE))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_MANSION
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_MANSION)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_MANSION)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_MANSION))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_CLIFF
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_CLIFF)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_CLIFF)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_CLIFF))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_BANK
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_BANK)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_BANK)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_BANK))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_FORT
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_FORT)
			(AT_ARTHUR_FORT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_FORT)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_FORT))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_VALLEY
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_VALLEY)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_VALLEY)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_VALLEY))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_TOWNARCH
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_TOWNARCH)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_TOWNARCH)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_TOWNARCH))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action CLOSE_ARTHUR_BARENTRANCE_DOCKS
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_BARENTRANCE)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(CLOSED_BARENTRANCE)
			(not (NOT-CLOSED_BARENTRANCE))
		)
	)
	(:action CLOSE_ARTHUR_BAREXIT_BAR
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_BAREXIT)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(CLOSED_BAREXIT)
			(not (NOT-CLOSED_BAREXIT))
		)
	)
	(:action CLOSE_ARTHUR_BASEMENTENTRANCE_BAR
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_BASEMENTENTRANCE)
			(AT_ARTHUR_BAR)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(CLOSED_BASEMENTENTRANCE)
			(not (NOT-CLOSED_BASEMENTENTRANCE))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_DOCKS_BARENTRANCE_BAR
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_BARENTRANCE)
			(NOT-AT_ARTHUR_BAR)
			(AT_ARTHUR_DOCKS)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_DOCKS)
			(AT_ARTHUR_BAR)
			(not (AT_ARTHUR_DOCKS))
			(not (NOT-AT_ARTHUR_BAR))
		)
	)
	(:action OPEN_ARTHUR_MANSIONENTRANCE_CLIFF
		:parameters ()
		:precondition
		(and
			(CLOSED_MANSIONENTRANCE)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-CLOSED_MANSIONENTRANCE)
			(not (CLOSED_MANSIONENTRANCE))
		)
	)
	(:action OPEN_ARTHUR_BANKEXIT_BANK
		:parameters ()
		:precondition
		(and
			(CLOSED_BANKEXIT)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-CLOSED_BANKEXIT)
			(not (CLOSED_BANKEXIT))
		)
	)
	(:action OPEN_ARTHUR_FORTEXIT_FORT
		:parameters ()
		:precondition
		(and
			(CLOSED_FORTEXIT)
			(AT_ARTHUR_FORT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-CLOSED_FORTEXIT)
			(not (CLOSED_FORTEXIT))
		)
	)
	(:action OPEN_ARTHUR_FORTENTRANCE_VALLEY
		:parameters ()
		:precondition
		(and
			(CLOSED_FORTENTRANCE)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-CLOSED_FORTENTRANCE)
			(not (CLOSED_FORTENTRANCE))
		)
	)
	(:action MOVE-THROUGH-DOORWAY_ARTHUR_TOWNARCH_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_TOWNARCH))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action MOVE-THROUGH-DOORWAY_ARTHUR_TOWNARCH_DOCKS
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_DOCKS)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_DOCKS)
			(not (AT_ARTHUR_TOWNARCH))
			(not (NOT-AT_ARTHUR_DOCKS))
		)
	)
	(:action GIVE_ARTHUR_LOVELETTER_JORDAN_MANSION
		:parameters ()
		:precondition
		(and
			(WANTS-ITEM_JORDAN_LOVELETTER)
			(NOT-HAS_JORDAN_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(HAS_JORDAN_LOVELETTER)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
			(not (WANTS-ITEM_JORDAN_LOVELETTER))
			(not (NOT-HAS_JORDAN_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_SILVER_HUT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(HAS_ARTHUR_SILVER)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SILVER)
			(AT_SILVER_HUT)
			(not (HAS_ARTHUR_SILVER))
			(not (NOT-AT_SILVER_HUT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SILVER))
		)
	)
	(:action DROP_ARTHUR_SILVER_FORGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(HAS_ARTHUR_SILVER)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SILVER)
			(AT_SILVER_FORGE)
			(not (HAS_ARTHUR_SILVER))
			(not (NOT-AT_SILVER_FORGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SILVER))
		)
	)
	(:action DROP_ARTHUR_SILVER_MANSION
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(HAS_ARTHUR_SILVER)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SILVER)
			(AT_SILVER_MANSION)
			(not (HAS_ARTHUR_SILVER))
			(not (NOT-AT_SILVER_MANSION))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SILVER))
		)
	)
	(:action DROP_ARTHUR_SILVER_CLIFF
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(HAS_ARTHUR_SILVER)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SILVER)
			(AT_SILVER_CLIFF)
			(not (HAS_ARTHUR_SILVER))
			(not (NOT-AT_SILVER_CLIFF))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SILVER))
		)
	)
	(:action DROP_ARTHUR_SILVER_BANK
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(HAS_ARTHUR_SILVER)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SILVER)
			(AT_SILVER_BANK)
			(not (HAS_ARTHUR_SILVER))
			(not (NOT-AT_SILVER_BANK))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SILVER))
		)
	)
	(:action DROP_ARTHUR_SILVER_FORT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(HAS_ARTHUR_SILVER)
			(AT_ARTHUR_FORT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SILVER)
			(AT_SILVER_FORT)
			(not (HAS_ARTHUR_SILVER))
			(not (NOT-AT_SILVER_FORT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SILVER))
		)
	)
	(:action DROP_ARTHUR_SILVER_VALLEY
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(HAS_ARTHUR_SILVER)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SILVER)
			(AT_SILVER_VALLEY)
			(not (HAS_ARTHUR_SILVER))
			(not (NOT-AT_SILVER_VALLEY))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SILVER))
		)
	)
	(:action DROP_ARTHUR_SILVER_TOWNARCH
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(HAS_ARTHUR_SILVER)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SILVER)
			(AT_SILVER_TOWNARCH)
			(not (HAS_ARTHUR_SILVER))
			(not (NOT-AT_SILVER_TOWNARCH))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SILVER))
		)
	)
	(:action DROP_ARTHUR_COIN_HUT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(HAS_ARTHUR_COIN)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_COIN)
			(AT_COIN_HUT)
			(not (HAS_ARTHUR_COIN))
			(not (NOT-AT_COIN_HUT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_COIN))
		)
	)
	(:action DROP_ARTHUR_COIN_FORGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(HAS_ARTHUR_COIN)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_COIN)
			(AT_COIN_FORGE)
			(not (HAS_ARTHUR_COIN))
			(not (NOT-AT_COIN_FORGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_COIN))
		)
	)
	(:action DROP_ARTHUR_COIN_MANSION
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(HAS_ARTHUR_COIN)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_COIN)
			(AT_COIN_MANSION)
			(not (HAS_ARTHUR_COIN))
			(not (NOT-AT_COIN_MANSION))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_COIN))
		)
	)
	(:action DROP_ARTHUR_COIN_CLIFF
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(HAS_ARTHUR_COIN)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_COIN)
			(AT_COIN_CLIFF)
			(not (HAS_ARTHUR_COIN))
			(not (NOT-AT_COIN_CLIFF))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_COIN))
		)
	)
	(:action DROP_ARTHUR_COIN_BANK
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(HAS_ARTHUR_COIN)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_COIN)
			(AT_COIN_BANK)
			(not (HAS_ARTHUR_COIN))
			(not (NOT-AT_COIN_BANK))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_COIN))
		)
	)
	(:action DROP_ARTHUR_COIN_FORT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(HAS_ARTHUR_COIN)
			(AT_ARTHUR_FORT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_COIN)
			(AT_COIN_FORT)
			(not (HAS_ARTHUR_COIN))
			(not (NOT-AT_COIN_FORT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_COIN))
		)
	)
	(:action DROP_ARTHUR_COIN_VALLEY
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(HAS_ARTHUR_COIN)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_COIN)
			(AT_COIN_VALLEY)
			(not (HAS_ARTHUR_COIN))
			(not (NOT-AT_COIN_VALLEY))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_COIN))
		)
	)
	(:action DROP_ARTHUR_COIN_TOWNARCH
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(HAS_ARTHUR_COIN)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_COIN)
			(AT_COIN_TOWNARCH)
			(not (HAS_ARTHUR_COIN))
			(not (NOT-AT_COIN_TOWNARCH))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_COIN))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_HUT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_HUT)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_HUT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_FORGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_FORGE)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_FORGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_MANSION
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_MANSION)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_MANSION))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_CLIFF
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_CLIFF)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_CLIFF))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_BANK
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_BANK)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_BANK))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_FORT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_FORT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_FORT)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_FORT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_VALLEY
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_VALLEY)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_VALLEY))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_TOWNARCH
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_TOWNARCH)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_TOWNARCH))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_HUT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_HUT)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_HUT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_FORGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_FORGE)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_FORGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_MANSION
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_MANSION)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_MANSION))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_CLIFF
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_CLIFF)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_CLIFF))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_BANK
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_BANK)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_BANK))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_FORT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_FORT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_FORT)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_FORT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_VALLEY
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_VALLEY)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_VALLEY))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_TOWNARCH
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_TOWNARCH)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_TOWNARCH))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_BUCKET_HUT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(HAS_ARTHUR_BUCKET)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BUCKET)
			(AT_BUCKET_HUT)
			(not (HAS_ARTHUR_BUCKET))
			(not (NOT-AT_BUCKET_HUT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET))
		)
	)
	(:action DROP_ARTHUR_BUCKET_FORGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(HAS_ARTHUR_BUCKET)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BUCKET)
			(AT_BUCKET_FORGE)
			(not (HAS_ARTHUR_BUCKET))
			(not (NOT-AT_BUCKET_FORGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET))
		)
	)
	(:action DROP_ARTHUR_BUCKET_MANSION
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(HAS_ARTHUR_BUCKET)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BUCKET)
			(AT_BUCKET_MANSION)
			(not (HAS_ARTHUR_BUCKET))
			(not (NOT-AT_BUCKET_MANSION))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET))
		)
	)
	(:action DROP_ARTHUR_BUCKET_CLIFF
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(HAS_ARTHUR_BUCKET)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BUCKET)
			(AT_BUCKET_CLIFF)
			(not (HAS_ARTHUR_BUCKET))
			(not (NOT-AT_BUCKET_CLIFF))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET))
		)
	)
	(:action DROP_ARTHUR_BUCKET_BANK
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(HAS_ARTHUR_BUCKET)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BUCKET)
			(AT_BUCKET_BANK)
			(not (HAS_ARTHUR_BUCKET))
			(not (NOT-AT_BUCKET_BANK))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET))
		)
	)
	(:action DROP_ARTHUR_BUCKET_SHOP
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(HAS_ARTHUR_BUCKET)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BUCKET)
			(AT_BUCKET_SHOP)
			(not (HAS_ARTHUR_BUCKET))
			(not (NOT-AT_BUCKET_SHOP))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET))
		)
	)
	(:action DROP_ARTHUR_BUCKET_FORT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(HAS_ARTHUR_BUCKET)
			(AT_ARTHUR_FORT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BUCKET)
			(AT_BUCKET_FORT)
			(not (HAS_ARTHUR_BUCKET))
			(not (NOT-AT_BUCKET_FORT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET))
		)
	)
	(:action DROP_ARTHUR_BUCKET_VALLEY
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(HAS_ARTHUR_BUCKET)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BUCKET)
			(AT_BUCKET_VALLEY)
			(not (HAS_ARTHUR_BUCKET))
			(not (NOT-AT_BUCKET_VALLEY))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET))
		)
	)
	(:action DROP_ARTHUR_BUCKET_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(HAS_ARTHUR_BUCKET)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BUCKET)
			(AT_BUCKET_TOWNSQUARE)
			(not (HAS_ARTHUR_BUCKET))
			(not (NOT-AT_BUCKET_TOWNSQUARE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET))
		)
	)
	(:action DROP_ARTHUR_BUCKET_TOWNARCH
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(HAS_ARTHUR_BUCKET)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_BUCKET)
			(AT_BUCKET_TOWNARCH)
			(not (HAS_ARTHUR_BUCKET))
			(not (NOT-AT_BUCKET_TOWNARCH))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_HUT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_HUT)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_HUT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_FORGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_FORGE)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_FORGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_MANSION
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_MANSION)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_MANSION))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_CLIFF
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_CLIFF)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_CLIFF))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_BANK
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_BANK)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_BANK))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_FORT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_FORT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_FORT)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_FORT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_VALLEY
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_VALLEY)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_VALLEY))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_TOWNARCH
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_TOWNARCH)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_TOWNARCH))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_HUT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_HUT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_HUT)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_HUT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_FORGE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_FORGE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_FORGE)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_FORGE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_MANSION
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_MANSION)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_MANSION)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_MANSION))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_CLIFF
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_CLIFF)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_CLIFF))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_BANK
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_BANK)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_BANK))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_FORT
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_FORT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_FORT)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_FORT))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_VALLEY
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_VALLEY)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_VALLEY))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_TOWNARCH
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_TOWNARCH)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_TOWNARCH))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_SILVER_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(AT_SILVER_TOWNSQUARE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SILVER_TOWNSQUARE)
			(HAS_ARTHUR_SILVER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(not (AT_SILVER_TOWNSQUARE))
			(not (NOT-HAS_ARTHUR_SILVER))
		)
	)
	(:action PICKUP_ARTHUR_COIN_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(AT_COIN_TOWNSQUARE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_COIN_TOWNSQUARE)
			(HAS_ARTHUR_COIN)
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(not (AT_COIN_TOWNSQUARE))
			(not (NOT-HAS_ARTHUR_COIN))
		)
	)
	(:action PICKUP_ARTHUR_RUBYRING_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(AT_RUBYRING_TOWNSQUARE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_RUBYRING_TOWNSQUARE)
			(HAS_ARTHUR_RUBYRING)
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(not (AT_RUBYRING_TOWNSQUARE))
			(not (NOT-HAS_ARTHUR_RUBYRING))
		)
	)
	(:action PICKUP_ARTHUR_KNIGHTSHIELD_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(AT_KNIGHTSHIELD_TOWNSQUARE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_KNIGHTSHIELD_TOWNSQUARE)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(not (AT_KNIGHTSHIELD_TOWNSQUARE))
			(not (NOT-HAS_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action PICKUP_ARTHUR_BUCKET_FORT
		:parameters ()
		:precondition
		(and
			(AT_BUCKET_FORT)
			(AT_ARTHUR_FORT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_BUCKET_FORT)
			(HAS_ARTHUR_BUCKET)
			(WILLING-TO-GIVE-ITEM_ARTHUR_BUCKET)
			(not (AT_BUCKET_FORT))
			(not (NOT-HAS_ARTHUR_BUCKET))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_TOWNSQUARE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_TOWNSQUARE)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_TOWNSQUARE))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_TOWNSQUARE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_TOWNSQUARE)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_TOWNSQUARE))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action CLOSE_ARTHUR_MANSIONENTRANCE_CLIFF
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_MANSIONENTRANCE)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(CLOSED_MANSIONENTRANCE)
			(not (NOT-CLOSED_MANSIONENTRANCE))
		)
	)
	(:action CLOSE_ARTHUR_BANKEXIT_BANK
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_BANKEXIT)
			(AT_ARTHUR_BANK)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(CLOSED_BANKEXIT)
			(not (NOT-CLOSED_BANKEXIT))
		)
	)
	(:action CLOSE_ARTHUR_FORTEXIT_FORT
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_FORTEXIT)
			(AT_ARTHUR_FORT)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(CLOSED_FORTEXIT)
			(not (NOT-CLOSED_FORTEXIT))
		)
	)
	(:action CLOSE_ARTHUR_FORTENTRANCE_VALLEY
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_FORTENTRANCE)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(CLOSED_FORTENTRANCE)
			(not (NOT-CLOSED_FORTENTRANCE))
		)
	)
	(:action CLOSE_ARTHUR_FORGEENTRANCE_TOWNARCH
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_FORGEENTRANCE)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(CLOSED_FORGEENTRANCE)
			(not (NOT-CLOSED_FORGEENTRANCE))
		)
	)
	(:action CLOSE_ARTHUR_HUTENTRANCE_TOWNARCH
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_HUTENTRANCE)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(CLOSED_HUTENTRANCE)
			(not (NOT-CLOSED_HUTENTRANCE))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNARCH_FORGEENTRANCE_FORGE
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_FORGEENTRANCE)
			(NOT-AT_ARTHUR_FORGE)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_FORGE)
			(not (AT_ARTHUR_TOWNARCH))
			(not (NOT-AT_ARTHUR_FORGE))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNSQUARE_BANKENTRANCE_BANK
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_BANKENTRANCE)
			(NOT-AT_ARTHUR_BANK)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_BANK)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_BANK))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_CLIFF_MANSIONENTRANCE_MANSION
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_MANSIONENTRANCE)
			(NOT-AT_ARTHUR_MANSION)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_CLIFF)
			(AT_ARTHUR_MANSION)
			(not (AT_ARTHUR_CLIFF))
			(not (NOT-AT_ARTHUR_MANSION))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_TOWNARCH_HUTENTRANCE_HUT
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_HUTENTRANCE)
			(NOT-AT_ARTHUR_HUT)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_HUT)
			(not (AT_ARTHUR_TOWNARCH))
			(not (NOT-AT_ARTHUR_HUT))
		)
	)
	(:action MOVE-THROUGH-ENTRANCE_ARTHUR_VALLEY_FORTENTRANCE_FORT
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_FORTENTRANCE)
			(NOT-AT_ARTHUR_FORT)
			(AT_ARTHUR_VALLEY)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_VALLEY)
			(AT_ARTHUR_FORT)
			(not (AT_ARTHUR_VALLEY))
			(not (NOT-AT_ARTHUR_FORT))
		)
	)
	(:action OPEN_ARTHUR_SHOPEXIT_SHOP
		:parameters ()
		:precondition
		(and
			(CLOSED_SHOPEXIT)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-CLOSED_SHOPEXIT)
			(not (CLOSED_SHOPEXIT))
		)
	)
	(:action OPEN_ARTHUR_BANKENTRANCE_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(CLOSED_BANKENTRANCE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-CLOSED_BANKENTRANCE)
			(not (CLOSED_BANKENTRANCE))
		)
	)
	(:action OPEN_ARTHUR_FORGEENTRANCE_TOWNARCH
		:parameters ()
		:precondition
		(and
			(CLOSED_FORGEENTRANCE)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-CLOSED_FORGEENTRANCE)
			(not (CLOSED_FORGEENTRANCE))
		)
	)
	(:action OPEN_ARTHUR_HUTENTRANCE_TOWNARCH
		:parameters ()
		:precondition
		(and
			(CLOSED_HUTENTRANCE)
			(AT_ARTHUR_TOWNARCH)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-CLOSED_HUTENTRANCE)
			(not (CLOSED_HUTENTRANCE))
		)
	)
	(:action MOVE-THROUGH-DOORWAY_ARTHUR_CLIFF_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_CLIFF)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_CLIFF)
			(AT_ARTHUR_TOWNSQUARE)
			(not (AT_ARTHUR_CLIFF))
			(not (NOT-AT_ARTHUR_TOWNSQUARE))
		)
	)
	(:action MOVE-THROUGH-DOORWAY_ARTHUR_TOWNSQUARE_CLIFF
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_CLIFF)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_CLIFF)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_CLIFF))
		)
	)
	(:action MOVE-THROUGH-DOORWAY_ARTHUR_TOWNSQUARE_VALLEY
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_VALLEY)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_VALLEY)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_VALLEY))
		)
	)
	(:action MOVE-THROUGH-DOORWAY_ARTHUR_TOWNSQUARE_TOWNARCH
		:parameters ()
		:precondition
		(and
			(NOT-AT_ARTHUR_TOWNARCH)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_ARTHUR_TOWNSQUARE)
			(AT_ARTHUR_TOWNARCH)
			(not (AT_ARTHUR_TOWNSQUARE))
			(not (NOT-AT_ARTHUR_TOWNARCH))
		)
	)
	(:action DROP_ARTHUR_SILVER_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(HAS_ARTHUR_SILVER)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SILVER)
			(AT_SILVER_TOWNSQUARE)
			(not (HAS_ARTHUR_SILVER))
			(not (NOT-AT_SILVER_TOWNSQUARE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SILVER))
		)
	)
	(:action DROP_ARTHUR_COIN_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(HAS_ARTHUR_COIN)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_COIN)
			(AT_COIN_TOWNSQUARE)
			(not (HAS_ARTHUR_COIN))
			(not (NOT-AT_COIN_TOWNSQUARE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_COIN))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_TOWNSQUARE)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_TOWNSQUARE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_TOWNSQUARE)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_TOWNSQUARE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_TOWNSQUARE)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_TOWNSQUARE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_TOWNSQUARE)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_TOWNSQUARE))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)
	(:action PICKUP_ARTHUR_SILVER_SHOP
		:parameters ()
		:precondition
		(and
			(AT_SILVER_SHOP)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_SILVER_SHOP)
			(HAS_ARTHUR_SILVER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(not (AT_SILVER_SHOP))
			(not (NOT-HAS_ARTHUR_SILVER))
		)
	)
	(:action PICKUP_ARTHUR_COIN_SHOP
		:parameters ()
		:precondition
		(and
			(AT_COIN_SHOP)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_COIN_SHOP)
			(HAS_ARTHUR_COIN)
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(not (AT_COIN_SHOP))
			(not (NOT-HAS_ARTHUR_COIN))
		)
	)
	(:action PICKUP_ARTHUR_LOVELETTER_SHOP
		:parameters ()
		:precondition
		(and
			(AT_LOVELETTER_SHOP)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_LOVELETTER_SHOP)
			(HAS_ARTHUR_LOVELETTER)
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(not (AT_LOVELETTER_SHOP))
			(not (NOT-HAS_ARTHUR_LOVELETTER))
		)
	)
	(:action PICKUP_ARTHUR_MUSHROOM_SHOP
		:parameters ()
		:precondition
		(and
			(AT_MUSHROOM_SHOP)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-AT_MUSHROOM_SHOP)
			(HAS_ARTHUR_MUSHROOM)
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(not (AT_MUSHROOM_SHOP))
			(not (NOT-HAS_ARTHUR_MUSHROOM))
		)
	)
	(:action CLOSE_ARTHUR_SHOPEXIT_SHOP
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_SHOPEXIT)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(CLOSED_SHOPEXIT)
			(not (NOT-CLOSED_SHOPEXIT))
		)
	)
	(:action CLOSE_ARTHUR_BANKENTRANCE_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_BANKENTRANCE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(CLOSED_BANKENTRANCE)
			(not (NOT-CLOSED_BANKENTRANCE))
		)
	)
	(:action CLOSE_ARTHUR_SHOPENTRANCE_TOWNSQUARE
		:parameters ()
		:precondition
		(and
			(NOT-CLOSED_SHOPENTRANCE)
			(AT_ARTHUR_TOWNSQUARE)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(CLOSED_SHOPENTRANCE)
			(not (NOT-CLOSED_SHOPENTRANCE))
		)
	)
	(:action DROP_ARTHUR_SILVER_SHOP
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_SILVER)
			(HAS_ARTHUR_SILVER)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_SILVER)
			(AT_SILVER_SHOP)
			(not (HAS_ARTHUR_SILVER))
			(not (NOT-AT_SILVER_SHOP))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_SILVER))
		)
	)
	(:action DROP_ARTHUR_COIN_SHOP
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_COIN)
			(HAS_ARTHUR_COIN)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_COIN)
			(AT_COIN_SHOP)
			(not (HAS_ARTHUR_COIN))
			(not (NOT-AT_COIN_SHOP))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_COIN))
		)
	)
	(:action DROP_ARTHUR_RUBYRING_SHOP
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING)
			(HAS_ARTHUR_RUBYRING)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_RUBYRING)
			(AT_RUBYRING_SHOP)
			(not (HAS_ARTHUR_RUBYRING))
			(not (NOT-AT_RUBYRING_SHOP))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_RUBYRING))
		)
	)
	(:action DROP_ARTHUR_KNIGHTSHIELD_SHOP
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD)
			(HAS_ARTHUR_KNIGHTSHIELD)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_KNIGHTSHIELD)
			(AT_KNIGHTSHIELD_SHOP)
			(not (HAS_ARTHUR_KNIGHTSHIELD))
			(not (NOT-AT_KNIGHTSHIELD_SHOP))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_KNIGHTSHIELD))
		)
	)
	(:action DROP_ARTHUR_LOVELETTER_SHOP
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER)
			(HAS_ARTHUR_LOVELETTER)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_LOVELETTER)
			(AT_LOVELETTER_SHOP)
			(not (HAS_ARTHUR_LOVELETTER))
			(not (NOT-AT_LOVELETTER_SHOP))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_LOVELETTER))
		)
	)
	(:action DROP_ARTHUR_MUSHROOM_SHOP
		:parameters ()
		:precondition
		(and
			(WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM)
			(HAS_ARTHUR_MUSHROOM)
			(AT_ARTHUR_SHOP)
		)
		:effect
		(and
			(increase (total-cost) 1)
			(NOT-HAS_ARTHUR_MUSHROOM)
			(AT_MUSHROOM_SHOP)
			(not (HAS_ARTHUR_MUSHROOM))
			(not (NOT-AT_MUSHROOM_SHOP))
			(not (WILLING-TO-GIVE-ITEM_ARTHUR_MUSHROOM))
		)
	)

)
